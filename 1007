로그인폼을 하나 만든다
페이지 이동
jstl 이용
아이디가 공란이면 아이디입력 출력
입력하면 안녕하세요 id님 출력

- a.jsp

<form action="b.jsp" method="post">
아이디: <input name="id"><br>
비번: <input name="pw" type="password"><br>
<input type="submit" value="로그인">
<input type="reset" value="다시입력">
</form>


- b.jsp

<c:choose>
<c:when test="${param.id==' ' } " >
다시입력
<a href="a.jsp">이전페이지</a>
</c:when>
<c:otherwise>
${param.id }님 안녕
<a href="a.jsp">이전페이지</a>
</c:otherwise>
</c:choose>

선생님 코드=>
test="${empty param.id } " // 아이디가 없으면

test="${not empty param.id } "  // 아이디가 있으면


-----------------------

** c:set 이용해서 출력

- a.jsp

<form action="b.jsp" method="post">
점수: <input name="score"><br>
<input type="submit" value="학점변환">
<input type="reset" value="다시입력">
</form>


- b.jsp

<c:set var="score" value="${param.score }"/>
<c:out value="${score }"/>

*****

// 90점 이상은 a, 80점 이상은 b, 그외 c

<c:set var="score" value="${param.score }"/>
<c:choose>
<c:when test="${score>=90 && score<100 }">
<c:out value="A"/>
</c:when>
<c:when test="${score>=80 && score<90 }">
<c:out value="B"/>
</c:when>
<c:otherwise>
<c:out value="C"/>
</c:otherwise>
</c:choose>

---------------------------

구구단출력

- a.jsp

<form action="b.jsp" method="post">
출력구구단: <input name="gu"><br>
<input type="submit" value="구구">


- b.jsp

<table width="500" align="center" border="1">
<tr align="center" bgcolor="yellow">
<td colspan="2">
<c:out value="${param.gu }"/>
</td>
</tr>
<c:forEach var="dan" begin="1" end="9" step="1">
<tr align="center" bgcolor="pink">
<td>${param.gu } * ${dan }</td>
<td>${param.gu*dan }</td>
</tr>
</c:forEach>
</table>

------------------

** 위 코드 응용
짝수행은 핑크, 홀수는 노랑


<table width="500" align="center" border="1">
<tr align="center" bgcolor="green">
<td colspan="2">
<c:out value="${param.gu }"/>
</td>
</tr>
<c:forEach var="dan" begin="1" end="9" varStatus="s">
<c:choose>
<c:when test="${s.count%2==0 }">
<tr align="center" bgcolor="pink">
<td>${param.gu } * ${dan }</td>
<td>${param.gu*dan }</td>
</tr>
</c:when>
<c:otherwise>
<tr align="center" bgcolor="yellow">
<td>${param.gu } * ${dan }</td>
<td>${param.gu*dan }</td>
</tr>
</c:otherwise>
</c:choose>
</c:forEach>
</table>

--------------------

** cos 다운로드(파일업로드)

http://servlets.com/cos/
접속
맨밑에 Download

cos-20.08.zip 클릭 다운로드, 압축풀기

C:\Users\USER\OneDrive\바탕 화면\cos-20.08\lib

cos 파일을 jstl 있는 곳(WebContent > WEB-INF > lib )에 넣어줌



---------------------

** 파일업로드 폼

- a.jsp

<form action="FileProc.jsp" method="post"
enctype="multipart/form-data">
<!-- 파일 업로드 -->
<center>
<table width="300" border="1">
<tr height="40">
<td width="100">파일 선택</td> 
<td width="200">
<!-- input type="file" 은 pc에서 파일 찾을 수 있는 버튼(찾아보기) 생성됨 -->
<input type="file" name="f"></td>
</tr>
<tr height="40">
<td align="center" colspan="2">
<input type="submit" value="파일업로드">
</td>
</tr>
</table>
</center>
</form>

---------------------

** 파일 업로드나 가져오기 하려면 jsp와 같은 폴더내(웹컨텐트)에 비어있는 폴더 하나 생성해야됨

* 파일 업로드는 get방식으로는 이용불가, post만 가능/ get은 작은 용량만 가능

----------------------

cos.jar 파일은
-> MultipartRequest 클래스를 제공해줌

클라이언트로부터 넘어온 데이터를 서버에 저장할 수 있게 해줌


MultipartRequest 의 매개변수:
1. MultipartRequest 와 연결할 request 객체-따로 설정하지 않으면 걍 request라고 하면 됨
2. 서버측에 저장될 경로
3. 최대파일 크기
4. 파일 인코딩 방식(한글이냐, utf-8 같은거)
5. 파일명중복처리( new DefaultFileRenamePolicy() ->중복처리방법)



---------

** 파일업로드 폼

<form action="FileProc.jsp" method="post"
enctype="multipart/form-data">
<!-- 파일 업로드 -->
<center>
<table width="300" border="1">
<tr height="40">
<td width="100">이름</td> 
<td width="200">
<input type="text" name="name"></td>
</tr>
<tr height="40">
<td width="100">파일 선택</td> 
<td width="200">
<!-- input type="file" 은 pc에서 파일 찾을 수 있는 버튼(찾아보기) 생성됨 -->
<input type="file" name="f"></td>
</tr>
<tr height="40">
<td align="center" colspan="2">
<input type="submit" value="파일업로드">
</td>
</tr>
</table>
</center>
</form>


** FileProc.jsp

<%
request.setCharacterEncoding("utf-8");
String fol=""; // 전달받은 파일명 저장할 변수
String save="/load"; // 파일 저장할 변수
String encType="UTF-8"; // 한글설정
int maxSize=10*1024*1024; // 최대파일크기설정(약 5mb정도);

// 서버상의 실제 경로를 찾아냄
ServletContext con=getServletContext();
fol=con.getRealPath(save); // 경로를 load안에 넣음
System.out.println(fol);

try{
	// 매개변수 최대 5개 들어감
	MultipartRequest m=
			new MultipartRequest(request,fol,maxSize,encType,
					new DefaultFileRenamePolicy());

%>

<%=m.getParameter("name") %>

<%

out.println(fol);
}catch(Exception e){
	System.out.print("에러");
}
%>


---------------------

- up.jsp

form action="upload.do" => 가상의 주소개념(서블릿 연결할때 파일의 실제 경로를 알 수 없어 보안에 좋음-일종의 암호화)

서블릿 만들때 url을 upload.do로 매핑시켜줌


<form action="upload.do" method="post"
enctype="multipart/form-data">
글쓴이 : <input type="text" name="name"><br>
제목 : <input type="text" name="title"><br>
파일 : <input type="file" name="upload"><br>
<input type="submit" value="전송"><br>
</form>



** 서블릿(오류)

   protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      request.setCharacterEncoding("utf-8"); //인코딩시 utf-8로 해야 됨
      response.setContentType("text/html; charset=utf-8");
      PrintWriter  out=response.getWriter();
      
      String save="upload";
      int maxSize=10*1024*1024;
      String encType="utf-8";
      
      ServletContext con=getServletContext();
      String fi=con.getRealPath(save);
      System.out.println(fi);
      
      try {
         
         MultipartRequest multi=new MultipartRequest(request,fi,maxSize,encType,new DefaultFileRenamePolicy());
          
         String name=multi.getFilesystemName("uploadFile");//업로그 된 파일의 이름을 알아내는 것
         
         if(name==null) {
            System.out.println("파일이 업로드 안 됨");
         }else {
            //name,title,file출력
            out.print(multi.getParameter("name"));
            out.print(multi.getParameter("title"));
            out.print(multi.getParameter("upload"));
            
         }
         
      }catch(Exception e) {
         System.out.println(e);
      }
      
   }

-------------------


서블릿(준호씨거- 파일다운받는창이 뜸)

 protected void doPost(HttpServletRequest request, HttpServletResponse response)
	         throws ServletException, IOException {
	      request.setCharacterEncoding("utf-8");
	      response.setContentType("text/html, charset=utf-8");
	      PrintWriter out = response.getWriter();

	      String save = "upload";
	      int maxSize = 10 * 1024 * 1024;
	      String encType = "UTF-8";

	      ServletContext con = getServletContext();
	      String fi = con.getRealPath(save);
	      System.out.println(fi);
	      
	      try {
	         MultipartRequest multi=new MultipartRequest(request,fi,maxSize,encType,new DefaultFileRenamePolicy());
	     
	         String name=multi.getFilesystemName("uploadFile");
	     
	         if(name==null) {
	        	 System.out.println("파일 업로드 안됨..");
	         }else {
	        	 out.print(multi.getParameter("name"));
	        	 out.print(multi.getParameter("title"));
	        	 out.print(multi.getParameter("upload"));
	        	 
	         }
	      }catch(Exception e) { //예외발생
	    	  System.out.println(e);

      }
      
   }

----------------------------



*** 파일명 출력

- jsp

<form action="upload.do" method="post" enctype="multipart/form-data">

1. 파일: <input type="file" name="up01"><br>
2. 파일: <input type="file" name="up02"><br>
3. 파일: <input type="file" name="up03"><br>

<input type="submit" value="전송">   
</form>


- 서블릿

   protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      request.setCharacterEncoding("utf-8"); //인코딩시 utf-8로 해야 됨
      response.setContentType("text/html; charset=utf-8");
      PrintWriter out=response.getWriter();
      
      String save="upload";
      int maxSize=10*1024*1024;
      String encType= "UTF-8";

      
      ServletContext con=getServletContext();
      String fii=con.getRealPath(save);
      
      
      try {
         
         MultipartRequest multi=new MultipartRequest(request, fii,maxSize,encType,new DefaultFileRenamePolicy());
         
         Enumeration fi=multi.getFileNames();
         
         while(fi.hasMoreElements()) {
        	 String file=(String)fi.nextElement();
        	 String fi_name=multi.getFilesystemName(file);
        	 out.print(fi_name);
         }
         
      }catch(Exception e) {
         System.out.println(e);
      }
      
   }

-----------------------

프로젝트
1. 구상 -> 아이디어
2. 파일(mvc)
3. 테이블생성
4. 커넥션풀
( js : 유효성 검사, css : 디자인 )
( jstl, standard, ojdbc, cos 설치 )

=> 이후에 코드

6. 클래스생성- 자바빈, DAO
7. 자바빈(

----------------

컨트롤러
(boardServlet, Action)

BoardServlet?command=board_list
-> 

-----------------

** <c:forTokens > : 특정 값으로 구분해서 출력

<c:forTokens items="서울, 부산, 울산, 전주" delims="," var="city">
${city }
</c:forTokens>

=> 서울부산울산전주  출력

------------------------

<%
java.util.List<String> season=new ArrayList<String>();
season.add("spring");
season.add("summer");
season.add("fall");
season.add("winter");

request.setAttribute("list",season);
request.setAttribute("index",1);

// 겨울 출력
// jstl 3가지 방법으로
%>

<c:out value="${list[3] }"></c:out>
${list[3] }
${list[index+2] }


-------------------

<%
java.util.List<String> season=new ArrayList<String>();
season.add("spring");
season.add("summer");
season.add("fall");
season.add("winter");

request.setAttribute("list",season);
request.setAttribute("index",1);

%>

<select name="season">
<%
java.util.ArrayList list=(java.util.ArrayList)request.getAttribute("list");

// 다 출력
%>
<c:forEach var="l" items="${list }">
<option value="${l }">${l }</option>
</c:forEach>
</select>


-------------------

