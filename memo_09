//  마우스 오버, 마우스 아웃
// 마우스 오버시 바디 div 아웃 클래스에 마우스 오버라고 추가 h1태그로
// 아웃을 하게 되면 바디 div 인 클래스에 아웃 문자열

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        .out{
            width: 100px;
            height: 100px;
            background-color: aqua;
        }
        .in{
            width: 50px;
            height: 50px;
            background-color: red;
        }
    </style>
</head>
<body>
    <div class="out">
        
        <div class="in"></div>
    </div>
    <script>
        $(function(){
          $('.out').mouseover(function(){
            $('body').append('<h1>마우스오버</h1>');
          }).mouseout(function(){
            $('body').append('<h1>마우스아웃</h1>');
          })

        });
    </script>
</body>
</html>

---------

parent() : 특정태그의 부모태그선택가능

find() : 특정 태그 찾음
$(this).parent().find('span').text("hi"); // 내 부모태그에서 span 태그 찾아서 hi로 변경

----

// 스팬 태그의 부모의 배경색 변경
// parent() 연습

<body>
    <div>
    <span>비활성</span>
    <button>활성</button>
    </div>
    <script>
        $(function(){
          $('span').parent().css('background','pink');
        });
    </script>
</body>

------

** parent() ,  find() 연습

<body>
    <div>
    <span>비활성</span>
    <button>활성</button>
    </div>
    <script>
        $(function(){
          $('button').click(function(){
            $(this).text('안녕');
            $(this).parent().css('background','green');
            $(this).parent().find('span').text("hi");
          });
        });
    </script>
</body>

---------

** 시각효과
$(selector).method();

* toggle('슬로우 or 패스트'); : show(보이기) 메소드와 hide(안보이기) 메소드 번갈아 실행. 

* animate : 애니메이션 동작
$(selector).animate(object); 


-------

** toggle 연습

<body>
    <button>보이기</button>
    <div class="di">
        <h1>제목</h1>
        <p>자바스크립트 제이쿼리</p>
    </div>
    <script>
        $(function(){
          $('button').click(function(){
            $('.di').toggle('slow');
          });
        });
    </script>
</body>

----

** hover 및 애니메이트 이용
마우스 갖다대면 오른쪽으로 이동했다 돌아옴

<body>
    <div></div>
    <div></div>
    <div></div>
    <script>
        $(function(){
          $('div').hover(function(){
              $(this).animate({
                  left: 300 // 위드가 300 만큼 왼쪽에서 떨어짐
              }, 'slow');
          }, function(){
              $(this).animate({
                  left:0 // 다시 원위치
              }, 'slow');
          });
        });
    </script>
</body>

------

워드 문제/ 로그인 기능 연습
css로 꾸며봄

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        h1{text-align: center;}
        div{
            margin: 0 auto; text-align: center;
            width: 300px; height: 250px;
            border: 3px dotted peru;
            background-color: peachpuff;
            border-radius: 10px;
            box-shadow: 5px 5px 5px brown,
            3px 3px 3px black;
        }
        div>h3, div>p{
            margin-left: 10px;
            text-align: left;
        }
        input[type=submit]{border: 3px dotted purple; background-color: pink; color: white;}
        input[type=submit]:hover{
            cursor: pointer;
            background-color: tomato;
        }
    </style>
</head>
<body>
    <h1>로그인</h1>
    <div>
    <h3>아이디</h3>
    <p><input type="text" id="id" placeholder="아이디를 입력해주세요."></p>
    <h3>비번</h3>
    <p><input type="password" id="pw" placeholder="비밀번호를 입력해주세요."></p>
    <p><input type="submit" id="log" value="로그인"></p>
    </div>
    <script>
        var log=document.getElementById("log");
        log.addEventListener('click',function(){
            var id=document.getElementById("id");
            var pw=document.getElementById("pw");
            if(id.value=="자바"&& pw.value=="1234"){
                alert("로그인성공");
            }else{
                alert("다시 입력");
                id.value="";
                pw.value="";
                return;
            }
        });
    </script>
</body>
</html>

---------

** history 연습

<body>
    <button onclick="history.back()">이전웹페이지</button>
    <button onclick="history.go(-2)">이이전웹페이지</button>
    <script>
        
    </script>
</body>

----

C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/둘리1.jpg

** 이미지 클릭시 다음 이미지로 바뀌는 코드

<body>
    <img src="C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/둘리1.jpg"
     alt="" width="200" height="150"
     onclick="ch(this)">
    

    <script>
        var n=["C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/둘리1.jpg",
                "C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/어벤져스포스터1.jpg",
                "C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/어벤져스포스터.jpg"
        ];
        
        var im=new Array();
        for(var i=0;i<n.length;i++){
            im[i]=new Image(); // 이미지 객체 생성
            im[i].src=n[i]; // 이미지 로딩 지시
        }
        
        var i=1;
        function ch(img){
            img.src=im[i].src; // 이미지 변경
            i++;
            i%=im.length; // 나머지 범위
        }
    </script>
</body>


---

// Array.isArray() : 배열인지 확인하는 함수

    <script>
        alert(Array.isArray([1,2,3]));
        // 배열인지 아닌지 true or false 로 팝업    
    </script>

---

// 반복 메소드(forEach, map)


**forEach 연습

<body>
    <script>
        var ary=[1,2,3,4,5];
        var sum=0;
        var n='';

        ary.forEach(function(element,index,ary){
            sum+=element;
            n+=index+" : "+element+" : "+sum+'\n';
           
        });
        alert(n);
    </script>
</body>

-----

** map 연습

    <script>
        var ary=[1,2,3,4,5];
        var n=ary.map(function(element){
            return element;
        })
        alert(n);
    </script>

---

// 조건메소드
filter, every, some


** filter 연습

    <script>
        var ary=[1,2,3,4,5];
        ary=ary.filter(function(element, index, ary){
            return element<=3;
            // 배열 값(element) 중에 3이하의 값만 저장
        })
        alert(ary);
    </script>

----

** every : 모두(and) 연산

** some : 일부(or) 연산

// every: 배열의 값이 모두 3보다 작거나 크면 true 아니면 false
// some: 배열 값 중 일부가 3보다 작거나 크면 true 하나도 없으면 false

    <script>
        var ary=[1,2,3,4,5];
        function mini(element, index, ary){
            return element<3;
        }
        function max(element, index, ary){
            return element>=3;
        }
        var a=ary.every(mini); 
        // 함수에 매개변수를 이미 넣어서 함수명만 적음
        var b=ary.every(max);
        var c=ary.some(mini);
        var d=ary.some(max);

        var n="";
        n+=a+" "+b+" "+'\n';
        n+=c+" "+d+'\n';
        alert(n);
    </script>

----




이클립스 지우고 재설치

제어판에서 자바 다 삭제
c드라이브 프로그램파일에서 java 폴더 없어야됨 있으면 삭제
pc에서 자바, 이클립스, jdk 모두 삭제

내pc 오른쪽 마우스 고급시스템설정
환경변수
path 더블클릭
java가 들어가는 거 삭제( %JAVA_HOME%\bin )

c드라이브에 jsp 폴더 생성

구글 jdk 다운로드 검색

첫번째 Java SE Downloads 

Java SE 14 > 오라클 jdk 다운로드
Windows x64 Installer 다운(바탕화면에 받음) > 실행> 넥스트>넥스트 > 클로즈

프로그램파일 폴더에 java 폴더 생성됨
java 폴더에 있는 jdk 폴더 복사해서
아까 생성한 jsp 폴더에 붙여넣기



구글 이클립스 다운로드 검색> 첫번째 홈페이지
다운로드패키지->Eclipse IDE for Enterprise Java Developers >
윈도우64bit 다운로드 > 압축 풀어서 jsp 폴더에 넣기



**경로설정하기:
내pc 오른쪽 마우스 속성 고급시스템설정
환경변수-> path 더블클릭 새로만들기-> java폴더 jdk -> bin 경로 복붙 확인
C:\Program Files\Java\jdk-14.0.2\bin

확인: cmd 켜서 java  , javac 엔터시 쭉 나와야됨

※ jsp 폴더에서 tomcat 폴더 만들기

이클립스 실행 > 
윈도우 쇼뷰 -> severs 
서버가 없으면 window > show view > other > servers검색 >하위폴더 더블클릭

=> 
콘솔창에 servers 뜨면 됨
아래쪽
No severs are ~~~  파란글씨 클릭
새창 팝업



새창에서 위쪽에 Apache 더블클릭
아래쪽 Tomcat v8.0 클릭 후 다음
다운로드 앤 인스톨.. 클릭
i accept 선택 후 피니쉬-> 로컬디스크 jsp > tomcat 폴더선택 > 피니쉬

왼쪽에 servers 프로젝트 생성됨
아래 tomcat v8.0 나와야됨

파일> 뉴> Dynamic Web Project 클릭
>이름 적고 넥스트>넥스트>피니쉬

왼쪽 새로 생성된 프로젝트 클릭시 하위폴더  5개 나와야됨

프로젝트 오른쪽마우스 
run as  >  run on server
다음 피니쉬

안되면 지우고 다시 
콘솔창에 있는  server 지우고 다시 클릭
-> tomcat 8.0 넥스트 해서 프로젝트 add(오른쪽으로 이동) 하고 피니쉬

아래 서버 오른쪽 마우스 하고 start 하고 엑세스 허용

stated, synchronized 로 변겨돼야함

왼쪽 프로젝트 하위폴더
WebContent > 오른쪽 마우스 >
new> jsp file 클릭
이름 정하고 완료..

창 열리면 아래 코드를 바디에 넣고 저장 후 콘솔 실행(되는지 테스트)

<%
		String str="hi";
	%>
	나는 배고프다<%=str %><br>
	제이에스피 fighting!!

-----------


*** jsp

1. pc에서 url 입력 > dns 서버로 이동(도메인 네임 서버)
2. DNS서버에서 ip주소로 변환해서 전달
3. pc에서 ip주소를 받아서 웹 서버에 jsp 페이지 요청(메인 페이지 보여달라고 요청)->서블릿 코드로 변환
4. 웹서버가 jsp/서블릿 컨테이너로 pc가 요청한 값 코드 분석요청(index.jsp)
5. 컨테이너에서 컴파일
6. 서블릿 적재
7. 디비에서 저장된 데이터 자료 전송, 그 실행결과 웹서버로 전송
8. 웹 서버에서 결과 페이지 전송
9. html 태그 분석과 동시에 화면 구현

서블릿 컨테이너: 자바언어로 변경해줌

-----

자바코드는 <% %> 안에 입력
밖에 적은건  jsp 언어

<% %> : 	멤버변수, 메소드 선연 영역
	
<%! %> : 메소드 선언시엔 ! 필요
<%= %> : 출력

	<%!
	String name="jsp";
	int id=123;
	%>
	<%
	String n=name+" java";
	%>
	
	결과: <%=name %>
	결과: <%=n %>
<% %> : sjp페이지가 서블릿으로 변환되고 요청될 때 메소드 안에 선언이 되는 요소. 스크립트릿. 메소드 선언 불가.
	
<%! %> : jsp 페이지가 서블릿 코드로 변환. 선언문. 멤버변수의 선언. 메소드 선언시엔 ! 필요
멤버변수 특징: 지역변수보다 늦게 나와도 선언 가능(전역변수여서)

<%= %> : 표현식. jsp페이지를 브라우저로 표현하기 위한 요소. 스크립트릿 코드 내에서 out 이라는 내장객체를 통해 브라우저에 출력 가능. 세미콜론 생략 가능.

-------


	<% String name= n+"공부"; %>
	<!-- 스크립트릿 : 지역변수, 함수선언 불가-->
	<%! String n="jsp"; %>
	<!-- 멤버변수 또는 메소드 -->
	<%=name %>

--------

멤버변수에 값 없을때

	<%!
	int n1=1;
	int n2=2;
	public int add(){
		return n1+n2;
	}
	String m;
	int n3;
	%>
	<%=add()%> <!-- 3출력  -->
	<%=m %> <!-- null -->
	<%=n3 %> <!-- 0 -->

----

	<%!
	int n1;
	String n2;
	
	%>
	<% int n3;
		String n4="스크립트릿";
	%>
	<!-- n3출력시도하면 에러남. 지역변수여서 지역변수여서 값을 넣어야 됨 -->
	<%= n3 + ":"+n4 %>


-------

	<%
	float f=2.3f;
	int i=Math.round(f);
	java.util.Date date=new java.util.Date();
	/* 데이트 객체 생성코드. 패키지 임포트 식 */
	%>
	<%=date.toString() %>


-----

** for문은 스크립트릿 안에 삽입

	<%!
	String name[]={
			"java","script","jsp"
	};
	%>
	<table border="1">
	<%for(int i=0;i<name.length;i++){ %>
		<tr><td><%=i%></td>
		<td><%=name[i] %></td>
		</tr>
		<% } %>
	
	</table>


=> 이렇게 출력
0 java 
1 script 
2 jsp 

---------

// big 함수 만들어 두 수 중 큰 값 리턴
// 함수호출
	<%!
	public int big(int a, int b){
		return a>b?a:b;
	}
	%>
	
	<%= big(1,3) %>	

----

1~10 까지 출력

<%for(int i=1;i<11;i++){%>
	<%= i %>
	<%} %>

1~10 까지 합 출력
	<%
	int i, sum=0;
	for(i=1;i<=10;i++){
		if(i<10){ %>
			<%=i+ " + " %>
	<%	}else{
		out.println(i+"="); // 자바코드-출력문
	}
		sum+=i;
	} %>
	<%=sum %>


--


// 1~10까지 합(while 문)
	<%
	int sum=0;
	int i=1;
	while(i<=10){
		sum+=i;
		i++;
	} 
	out.println(sum); // 이렇게도 출력 가능
	%>
	<%= sum %>

----

// 선언문 위에 적어도 됨(전역변수여서)
// 도큐먼트타입 위에 적음

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
    
<%! int n=0; %>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	
	<%
	int n1=0;
	out.println(n1);
	out.print("<br>");
	out.print(++n);
	%>
	

</body>
</html>

---

<%!
String str="안녕~";
int a=-10, b=10;

// 양수는 음수로, 음수는 양수로 바꾸는 함수
public int abs(int n){
	
	return n*-1;
}
%>

----

** html+jsp 연결해서 화면 띄우기

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
    

<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	
	<%!
		String str;
		
	%>
	<%
	// request 는 내장객체 (임포트 필요없음)
		String name=request.getParameter("name");
		String food=request.getParameter("food");
	// html 파일에 있는 값 가져오는 작업
	
	 	if(food.equals("라면")){
	 		str="라면";
	 	}else if(food.equals("치킨")){
	 		str="치킨";
	 	}
	%>
	좋아하는 음식은<%=str %>

</body>
</html>

***

<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>

<!-- form 메소드: post -> 주소 암호화전송, get 은 그대로 전송 -->
	<form method="post" action="hi.jsp">
	이름: <input name="name">
	좋아하는 음식: <select name="food">
				<option value="라면" selected>라면</option>
				<option value="피자" >피자</option>
				<option value="치킨" >치킨</option>
			</select>
	<input type="submit" value="제출">
	</form>
</body>
</html>


=> 선생님 코드

<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	<form method="post" action="hi.jsp">

	이름: <input name="name"><p/>
	좋아하는 음식: <select name="food">
				<option value="ramen" selected>라면</option>
				<option value="pizza">피자</option>
				<option value="chicken">치킨</option>
				</select>
	<input type="submit" value="제출">
</form>
</body>
</html>


***

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>

</head>
<body>
	
	<%!
		String str;
	%>
	<%
		String name=request.getParameter("name");
		String food=request.getParameter("food");
		
		if(food.equals("ramen")){
			str="ramen";
		}
		else if(food.equals("chicken")){
			str="chicken";
		}
		
	%>
	
	좋아하는 음식은 <%=str %>
	
	
</body>
</html>


--


**  요청된 값이 한글일 때 셋팅 하는 코드

	<% 
	request.setCharacterEncoding("EUC-KR");
	%>

----

// 문자열과 몇번 반복이라는 값을 읽어서 반복한 횟수만큼 문자열 출력


<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>

<!-- form 메소드: post -> 주소 암호화전송, get 은 그대로 전송 -->
	<form method="post" action="hi.jsp">
	이름: <input name="name">
	좋아하는 음식: <select name="food">
				<option value="ra" selected>라면</option>
				<option value="pi" >피자</option>
				<option value="chi" >치킨</option>
			</select>
	<input type="submit" value="제출">
	</form>
</body>
</html>


***

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
    

<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	<% 
	String msg = request.getParameter("msg");
	String num = request.getParameter("num");
	
	int a = Integer.parseInt(num);
	for(int i=0; i<a; i++){
		out.println(msg);
	}

	%>
</body>
</html>

----

=> 선생님 코드

<body>

	<% 
		request.setCharacterEncoding("EUC-KR");
		//요청된 값이 한글일 때 세팅하는 코드
		
		String m=request.getParameter("msg");
		int n=Integer.parseInt(request.getParameter("num"));
		int cnt=0;
		
		while(n>cnt){
	%>
	
		<%=m%>
	<%
		cnt++;
		}
	%>
		
	
</body>


---

// 구구단 출력

	<% 
	for(int i=2;i<=9;i++){
		for(int j=1;j<=9;j++){
			out.println(i+" * "+j+" = "+j*i);
		}
		out.print("<br>");
	}
	%>

-----------

** 내부(내장)객체: jsp  에서 선언하지 않고 사용 가능한 객체. 내부에 있음.


-----

** request : 사용자 정보가 저장되어 있는 객체.
request 의 getParameter() 를 이용하여 정보 추출

id : 입력창
pw : 입력창
제출버튼

버튼 누르면 아이디,비번 넘어가서 로그인 여부 확인
<h2> 태그로
<당신의 아이디는 xx 이고 비번은 yy 입니다.> 출력


- HTML 화면: 

	<form method="post" action="hi.jsp">
	
	아이디: <input name="id"> <br>
	비번: <input name="pw"> <br>
	<input type="submit" value="제출">
	
	</form>


- JSP 화면: 
<%
String id=request.getParameter("id");
String pw=request.getParameter("pw");
out.print("<h2>"+"당신의 아이디는 "+id+"이고 비번은 "+pw+"이다"+"</h2>");
%>

--------

// 회원가입폼 짜기
// 스타일 적용할때 외부파일 불러오거나 인라인스타일 많이 줌
// 헤드에 넣으려면 
<style type="text/css"> 이렇게 해주기


- jsp :

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
<%
// 한글 깨질 때 셋팅하는 코드
request.setCharacterEncoding("EUC-KR");

String id=request.getParameter("id");
String pw=request.getParameter("pw");
String pwch=request.getParameter("pwch");
String mail=request.getParameter("mail");
String tel=request.getParameter("tel");
String job=request.getParameter("job");
String age=request.getParameter("age");
String hope=request.getParameter("hope");

String[]h=request.getParameterValues("check");
for(int i=0;i<h.length;i++){
	out.print(h[i]+"<br>");
}
%>
<%= 
"아이디: " + id +"<br>"+
"비번: " + pw +"<br>"+
"비번확인: " + pwch +"<br>"+
"mail: " + mail +"<br>"+
"tel: " + tel +"<br>"+
"job: " + job +"<br>"+
"age: " + age +"<br>"+
"hope: " + hope +"<br>"
%>

</body>
</html>


-- html: 

<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
<style type="text/css">
h2{
text-align: center;
}
form{
margin: 0 auto; text-align: center;
width: 400px; height: 400px;
}
</style>
</head>
<body>
	<h2>회원가입</h2>
	<form method="post" action="log.jsp">
	<table border="1">
		<tr>
		<td>아이디</td><td><input name="id"></td>
		</tr>
		<tr>
		<td>비번</td><td><input type="password" name="pw"></td>
		</tr>
		<tr>
		<td>비번확인</td><td><input type="password" name="pwch"></td>
		</tr>
		<tr>
		<td>이메일</td><td><input type="email" name="mail"></td>
		</tr>
		<tr>
		<td>전화번호</td><td><input type="tel" name="tel"></td>
		</tr>
		<tr>
		<td>당신의 관심분야</td><td>
		<input type="checkbox" name="check" value="cam">캠핑
		<input type="checkbox" name="check" value="mount">등산
		<input type="checkbox" name="check" value="movie">영화
		<input type="checkbox" name="check" value="book">독서
		</td>
		</tr>
		<tr>
		<td>당신의 직업은</td>
		<td>
		<select name="job">
		<option value="doc">의사
		<option value="stu">학생
		</select>
		</td>
		</tr>
		<tr>
		<td>당신의 연령은</td>
		<td>
		<input type="radio" name="age">10대
		<input type="radio" name="age">20대
		<input type="radio" name="age">30대
		<input type="radio" name="age">40대
		</td>
		</tr>
		<tr>
		<td>하고싶은말</td>
		<td><textarea cols=10 rows=5 name="hope"></textarea></td>
		</tr>
		<tr>
		<td colspan="2">
		<input type="submit" value="가입">
		<input type="reset" value="취소">
		</td>
		</tr>
	</table>
	</form>

</body>
</html>

------------------

선생님 코드
=>

<%@ page language="java" contentType="text/html; charset=EUC-KR"

    pageEncoding="EUC-KR"%>

<!DOCTYPE html>

<html>

<head>

<meta charset="EUC-KR">

<title>Insert title here</title>

</head>

<body>

<center>

<h2> 회원정보보기</h2>

 

  <%

   request.setCharacterEncoding("EUC-KR");

   

   String id=request.getParameter("id");

   String pw=request.getParameter("pw");

   String pwch=request.getParameter("pwch");

   String email=request.getParameter("mail");

   String tel=request.getParameter("tel");

   

   String[] h= request.getParameterValues("chek");

   

   String job=request.getParameter("job");

   String age=request.getParameter("age");

   String info=request.getParameter("hope");

  %>

</center>

</body>

</html>

​

---------------------------------------------------------

​

<%@ page language="java" contentType="text/html; charset=EUC-KR"

    pageEncoding="EUC-KR"%>

<!DOCTYPE html>

<html>

<head>

<meta charset="EUC-KR">

<title>Insert title here</title>

</head>

<body>

<center>

<h2> 회원가입</h2>

<form action="Log.jsp" method="post">

<table width="500" border="1">

<tr height="50">

<td width="150" align="center"> 아이디</td>

<td widht="350" align="center"><input type="text" name="id" size="40"></td>

<tr height="50">

<td width="150" align="center"> 패스워드</td>

<td widht="350" align="center"><input type="password" name="pass1" size="40"></td>

<tr height="50">

<td width="150" align="center"> 패스워드확인</td>

<td widht="350" align="center"><input type="password" name="pass2" size="40"></td>

<tr height="50">

<td width="150" align="center"> 이메일</td>

<td widht="350" align="center"><input type="email" name="email" size="40"></td>

<tr height="50">

<td width="150" align="center"> 전화번호</td>

<td widht="350" align="center"><input type="tel" name="tel" size="40"></td>

<tr height="50">

<td width="150" align="center"> 당신의관심분야</td>

<td width="350" align="center">

<input type="checkbox" name="hobby" value="캠핑">캠핑   

<input type="checkbox" name="hobby" value="등산">등산   

<input type="checkbox" name="hobby" value="영화">영화   

<input type="checkbox" name="hobby" value="독서">독서   

</td>

</tr>

<tr height="50">

<td width="150" align="center"> 당신의직업은</td>

<td width="350" align="center">

<select name="job">

<option value="교사">교사</option>

<option value="변호사">변호사</option>

<option value="의사">의사</option>

<option value="기술사">기술사</option>

</select>

</td>

</tr>

<tr height="50">

<td width="150" align="center"> 당신의연령은</td>

<td width="350" align="center">

<input type="radio" name="age" value="10">10대   

<input type="radio" name="age" value="20">20대   

<input type="radio" name="age" value="30">30대   

<input type="radio" name="age" value="40">40대   

</td>

</tr>

<tr height="50">

<td width="150" align="center"> 하고싶은말</td>

<td width="350" align="center">

<textarea rows="5" cols="40" name="info"></textarea>

</td>

</tr>

<tr height="50">

<td align="center" colspan="2">

<input type="submit" value="회원가입">

<input type="reset" value="취소">

</td>

</tr>

</table>

</form>

</center>

</body>

</html>

-------------------

// 정수 하나 입력받아

정수:  텍스트창
확인버튼 

버튼 누른 후 50보다 크면 50보다크다, 작으면 작다 출력

- HTML : 

	<form method="post" action="hi.jsp">
		정수 : <input name="int"><br>
		<input type="submit" value="확인">
	</form>


-jsp :

<%
int a=Integer.parseInt(request.getParameter("int"));
if(a>50){
	out.print("50보다 크다");
}else{
	out.print("50보다 작거나 같다");
}
%>



-------------

//
o 파랑
o 노랑
o 빨강
o 주황
확인버튼
확인버튼 누르면
윤혁은 xx색을 좋아한다. 출력 후 배경색 해당 색으로 바꾸기

	<form method="post" action="hi.jsp">
		<input type="radio" name="col" value="blue">파랑<br>
		<input type="radio" name="col" value="yellow">노랑<br>
		<input type="radio" name="col" value="red">빨강<br>
		<input type="radio" name="col" value="orange">주황<br>
		<input type="submit" value="확인">
	</form>


****

<%
String col=request.getParameter("col");
 out.print("윤혁은 "+col+"색을 좋아한다.");
%>
<script type="text/javascript">
document.body.style.background="<%=col%>";
</script>


----------

=> 위 코드 다르게 짠거


<head>
<%String col=request.getParameter("col"); %>
<meta charset="EUC-KR">
<title>Insert title here</title>

</head>
<body bgcolor="<%=col%>">

<%
 out.print("윤혁은 "+col+"색을 좋아한다.");
%>
</body>

------

// 2~9 정수 입력 받으면 구구단 출력
단을 하나 입력받아 입력받은 단의 구구단 출력
request객체 사용

	<form method="post" action="hi.jsp">
		<input name="gugu">
		<input type="submit" value="확인">
	</form>


****

<%
int a=Integer.parseInt(request.getParameter("gugu"));
for(int i=1;i<=9;i++){
	out.print(a+" * "+i+" =" +a*i+"<br>");
}
%>

---------------

***** 자바스크립트&제이쿼리****

h2태그로 이름 출력

// 자바스크립트
        var a=document.createElement("h2");
        a.innerHTML="김지혜";
        document.body.appendChild(a);

// 제이쿼리
        $(function(){
            $('<h2>').appendTo("body").html("김지혜");
        })

-------

** 버튼 누르면 카운트 올라감
** Number( ) 객체 연습 : 숫자로 변경해줌

<body>
    <button id="a">A</button>
    <button id="b">B</button>
    <h2>A: <span id="c">0</span></h2>
    <h2>B: <span id="d">0</span></h2>
    <script>
        window.onload=function(){
        var a=document.getElementById("a");
        var b=document.getElementById("b");
        var c=document.getElementById("c");
        var d=document.getElementById("d");

        a.onclick=function(){
            // Number = 숫자로 변경해주는 객체
            c.innerHTML=Number(c.innerHTML)+1;
        }
        b.onclick=function(){
            d.innerHTML=Number(d.innerHTML)+1;
        }
        }
    </script>
</body>
***서블릿 연습(get, post)

get: 주소를 타고 넘어가 그대로 출력. 보안에 취약
post: html header 타고 넘어가 보안성 강함. 대용량 데이터 전송

**서블릿 만들기
다이나믹웹프로젝트 생성해서
java resources 오른쪽 마우스 패키지 생성, 패키지 오른쪽 마우스 
Servlet 클릭


- jsp 파일

<%@ page language="java" contentType="text/html; charset=EUC-KR"
	pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	<form method="get" action="Me">
		<!-- Me 서블릿 클래스 -->
		<input type="submit" value="get방식">
	</form>
	<br>
	<form method="post" action="Me">
		<input type="submit" value="post방식">
	</form>
</body>
</html>



- 서블릿


package we;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Me")
public class Me extends HttpServlet {
	private static final long serialVersionUID = 1L; 
	// serialVersionUID = 1L 서블릿 객체 고유번호

    public Me() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; charset=UTF-8"); 
		// html 타입으로 하겠다, utf-8 한글로 인코딩
		// euc-kr 도 utf-8과 동일
		PrintWriter out=response.getWriter();
		// 출력 스트림 얻어옴
		out.print("<h1>get 방식!</h1>");
		out.close();
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; charset=UTF-8"); 
		// html 타입으로 하겠다, utf-8 한글로 인코딩
		PrintWriter out=response.getWriter();
		// 출력 스트림 얻어옴
		out.print("<h1>post 방식!</h1>");
		out.close();
	}

}

--------------------------------------

*** 서블릿 연습
* 서블릿 안에 스크립트 코드

* jsp

<%@ page language="java" contentType="text/html; charset=EUC-KR"
	pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	<form method="get" action="Me">
	아이디: <input name="id"><br>
	나이: <input name="age"><br>
	<input type="submit" value="전송">
	</form>
</body>
</html>


* 서블릿

package we;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Me")
public class Me extends HttpServlet {
	private static final long serialVersionUID = 1L; 
	// serialVersionUID = 1L 서블릿 객체 고유번호

    public Me() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; charset=euc-kr");
		// euc-kr 도 utf-8과 동일
		String id=request.getParameter("id");
		int age=Integer.parseInt(request.getParameter("age"));
		PrintWriter out=response.getWriter();
		out.print("<html><body>");
		out.println(id);
		out.println(age);
		
		// 자바스크립트로 이전페이지 이동
		out.println("<a href='javascript:history.go(-1)'>이전페이지</a>");
		out.print("</body></html>");
		out.close();
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}

}

--------------------------------------

// 체크박스 선택값 출력연습
// 선택값이 없으면 선택한 항목 없다

- jsp

	<form method="get" action="Me">
	<input type="checkbox" name="ch" value="책">책
	<input type="checkbox" name="ch" value="컴퓨터">컴퓨터
	<input type="checkbox" name="ch" value="키보드">키보드
	<input type="checkbox" name="ch" value="핸드폰">핸드폰<br>
	<input type="submit" value="전송">
	</form>


- 서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html;charset=UTF-8");
		String []a= request.getParameterValues("ch");
		PrintWriter out=response.getWriter();
		if(a==null) {
			out.print("<html><body><script>alert('선택항목없음')</script></body></html>");
		}else {
			
			for(int i=0;i<a.length;i++) {
				out.print("<html><body><h1>"+a[i]+"</h1></body></html>");
			}
		}
		out.close();
	}

------------------

콤보박스(셀렉트 옵션)에(naver, daum, google) 세 항목을 만들고 항목을 선택하여 해당 사이트로 이동하는 프로그램을 작성해라.

- 첫번째

	<form name="frm" method="post" action="ac1.jsp">
	<select name="a">
	<option value="http://www.naver.com">네이버
	<option value="http://www.daum.net">다음
	</selct>
	<input type="submit" value="전송">
	</form>


- ac1.jsp

<%
String a=request.getParameter("a");
response.sendRedirect(a);
%>

------------------

** 자바 빈 연습

- 메인.jsp

	<form name="frm" method="post" action="ac1.jsp">
	<table>
	<tr>
	<td>상품제목: </td><td><input name="name"></td>
	</tr>
	<tr>
	<td>가격: </td><td><input name="price"></td>
	</tr>
	<tr>
	<td>상품설명: </td><td><textarea name="desc"></textarea></td>
	</table>
	<input type="submit" value="전송">
	</form>


- ac1.jsp

<jsp:useBean id="i" class="we.item">
<jsp:setProperty property="*" name="i"/>
</jsp:useBean>

이름: <%=i.getName() %><br>
가격: <jsp:getProperty property="price" name="i"/><br>
세부: <jsp:getProperty property="desc" name="i"/>


- item 클래스

package we;

public class item {
private String name;
private int price;
private String desc;

public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public int getPrice() {
	return price;
}
public void setPrice(int price) {
	this.price = price;
}
public String getDesc() {
	return desc;
}
public void setDesc(String desc) {
	this.desc = desc;
}
}

--------------------------------

Input text에 마지막(끝)값을 입력받아 1부터 마지막까지의 수를 더하는 프로그램을 작성해라.

- 메인
	<form name="frm" method="post" action="ac1.jsp">
	<input name="num">
	<input type="submit" value="전송">
	</form>

- ac1.jsp

<%
int a=Integer.parseInt(request.getParameter("num"));
int sum=0;
for(int i=0;i<=a;i++){
	sum+=i;
}
%>
<%=sum %>



--------------------------

** 서블릿 + 자바스크립트 연습
아이디 나이 출력
id, age 값이 비어 있으면
alert("아이디 or 나이 입력 ");
나이를 숫자가 아닌 문자로 넣으면
alert("숫자로 줘라");


- pa.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript">
function check(){
	if(document.fo.id.value==""){
		alert("아이디 입력");
		return false;
	}
	else if(document.fo.age.value==""){
		alert("나이 입력");
		return false;
	}
	else if(isNaN(document.fo.age.value)){
		alert("숫자로 입력해라");
		return false;
	}
	else{
		return true;
	}
	
	
}

</script>

</head>
<body>
<form method="get" action="Param" name="fo">
아이디:<input name="id"><br>
나 이 :<input name="age"><br>
<input type="submit" value="전송"
onclick="return check()">
</form>
</body>
</html>



- param.java

package we;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/Param")
public class Param extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
    public Param() {
        super();
    }

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html;charset=euc-kr");
		String id=request.getParameter("id");
		String age=request.getParameter("age");
		PrintWriter out=response.getWriter();
		out.write("<html><body>");
		out.write(id);
		out.write(age);
		out.write("</body></html>");
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}

}


-----------------------------------

** 연습

메일 수신여부 : y or n (라디오버튼)
가입인사: textarea 
전송 누르면 서블릿 출력

- 메인.jsp

<%request.setCharacterEncoding("euc-kr"); %>
	<form method="get" action="Param">
	메일: 
	<input name="mail" type="radio" value="Y">Y
	<input name="mail" type="radio" value="N">N
	<br>
	가입인사: <textarea name="hi" cols=10 rows=3></textarea>
	<br>
	<input type="submit" value="전송">
	</form>


- 서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html;charset=euc-kr");
		String mail=request.getParameter("mail");
		String hi=request.getParameter("hi");
		PrintWriter out=response.getWriter();
		out.write("<html><body>");
		out.write("메일전송여부: "+mail+"<br>");
		out.write("가입인사: "+hi);
		out.write("</body></html>");
	}


----------------------------

** ojdbc 연결
왼쪽 메뉴
WebContent
WEB-INF
lib
안에 ojdbc 복붙만 하면 됨

--------------------------------


// 서블릿으로 다 출력하고
"다시"라는 하이퍼링크 누르면 이전 페이지로 이동

메인. jsp

<% request.setCharacterEncoding("euc-kr"); %>
<form method="get" action="rservlet">
<label for="gen">성별</label>
<input type="radio" name="ra" id="gen" value="man" checked>남성
<input type="radio" name="ra" id="gen" value="woman">여성
<br>
<label for="con">가입인사</label>
<textarea id="con" name="con" rows="3" cols="35"></textarea>
<input type="submit" value="전송">
</form>


- 서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; charset=UTF-8");
		String gen=request.getParameter("ra");
		String con=request.getParameter("con");
		PrintWriter out=response.getWriter();
		out.write("<html><body>");
		out.write(gen+" "+con);
		out.write("<a href='javascript:history.go(-1)'>이전페이지</a>");
		out.write("</body></html>");
		out.close();
	}

--------------------------------------

** DB연결(디벨로퍼 키고 해야됨)

package bean;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class Move {
	public static void main(String[] args) {

		Connection con;
		try {
			// 1. jdbc 드라이버의 인스턴스 생성
			Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
			
			// 2. jdbc 드라이버의 인스턴스를 통해 dbms 와 연결 생성
			con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe", "sys as sysdba", "djaak5685");
			System.out.println("success");

		} catch (SQLException ex) {
			System.out.println(ex);
		} catch (Exception e) {
			System.out.println(e);
		}
	}
}



=> 콘솔에서 Java Application 선택

----------------

    <!-- baen패키지 임폴트 작업 -->
    <%@ page import="java.util.*,bean.*" %>


---------------------

** 디비 연결 jsp

<%@page import="java.sql.SQLException"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.beans.Statement"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
    
    <!-- baen패키지 임폴트 작업 -->
    <%@ page import="java.util.*,bean.*" %>
    
    <%
    Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
    Connection con=null;
    Statement stmt=null;
    ResultSet rs=null;
    
    String id="",pw="",name="",email="",phone="", adr="", job="";
    int cnt=0;
    try{
    	con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe", "sys as sysdba", "djaak5685");
    	
    }catch(SQLException e){
    	
    }
    %>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>

</body>
</html>


Border클래스(자바빈)를 만든 후 정보를 입력받는 bor1.jsp와 이를 처리하는 bor2.jsp를 작성해라.

-클래스

package bean;

public class Border {
private String name;
private String pass;
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getPass() {
	return pass;
}
public void setPass(String pass) {
	this.pass = pass;
}
public String getEmail() {
	return email;
}
public void setEmail(String email) {
	this.email = email;
}
public String getTitle() {
	return title;
}
public void setTitle(String title) {
	this.title = title;
}
public String getContent() {
	return content;
}
public void setContent(String content) {
	this.content = content;
}
private String email;
private String title;
private String content;
}


- bor1.jsp

<% request.setCharacterEncoding("euc-kr"); %>
<form method="post" action="bor2.jsp">
<table>
<tr>
<td>이름: </td><td><input name="name"></td>
</tr>
<tr>
<td>비밀번호: </td><td><input type="password" name="pass"></td>
</tr>
<tr>
<td>이메일: </td><td><input type="email" name="email"></td>
</tr>
<tr>
<td>제목: </td><td><input name="title"></td>
</tr>
<tr>
<td>내용: </td>
<td><textarea name="content" cols="10" rows="2"></textarea></td>
</tr>
</table>
<input type="submit" value="전송">
</form>


- bor2.jsp


<% request.setCharacterEncoding("euc-kr"); %>
<jsp:useBean id="be" class="bean.Border">
<jsp:setProperty property="*" name="be"/>
</jsp:useBean>

이름: <jsp:getProperty property="name" name="be"/><br>
비번: <jsp:getProperty property="pass" name="be"/><br>
메일: <jsp:getProperty property="email" name="be"/><br>
제목: <jsp:getProperty property="title" name="be"/><br>
내용: <jsp:getProperty property="content" name="be"/><br>


-----------------------------


2. 실행 결과에 필요한 서블릿(Test.java)을 작성해라.

<form method="get" action="ss">
수1 : <input name="n1"><br>
수2: <input name="n2"><br>
<input type="submit" value="계산">
</form>


=>서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	response.setContentType("text/html; setChar=UTF-8");
	String n1=request.getParameter("n1");
	String n2=request.getParameter("n2");
	PrintWriter out=response.getWriter();
	out.print("<html><body>n1: "+n1+"<br>n2: "+n2+"</body></html>");
	out.close();
	}


-------------------------

** 가입폼: 자꾸 오류남

- 가입창 폼

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
<% request.setCharacterEncoding("euc-kr"); %>
<form method="post" action="JoinServlet">
<table>
<tr>
<td>이름 </td><td><input name="name"></td>
</tr>

<tr>
<td>주민번호 </td><td><input type="number" name="num1"> - <input type="number" name="num2"></td>
</tr>
<tr>
<td>아이디 </td><td><input name="id"></td>
</tr>
<tr>
<td>비밀번호 </td><td><input type="password" name="pw1"></td>
</tr>
<tr>
<td>비밀번호확인 </td><td><input type="password" name="pw2"></td>
</tr>
<tr>
<td>이메일 </td><td><input name="mail1">@<input name="mail2">
<select name="mail">
<option value="naver.com">naver.com
<option value="daum.net">daum.net
</select>
</td>
</tr>
<tr>
<td>우편번호 </td><td><input name="post"></td>
</tr>
<tr>
<td>주소 </td><td><input name="ad1"><input name="ad2"></td>
</tr>
<tr>
<td>핸드폰번호 </td><td><input name="tel"></td>
</tr>
<tr>
<td>직업 </td>
<td><select name="job">ㄴ
<option value="stu">학생
<option value="com">컴퓨터
<option value="sal">회사원
</select></td>
</tr>
<tr>
<td>메일/SMS 정보 수신</td><td>
<input type="radio" name="sms" checked value="ok">수신
<input type="radio" name="sms" value="no">거부
</table>
<input type="submit" value="회원가입">
<input type="reset" value="취소">
</form>
</body>
</html>

--- 서블릿

protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; setChar=UTF-8");
		String name=request.getParameter("name");
		int num1=Integer.parseInt(request.getParameter("num1"));
		int num2=Integer.parseInt(request.getParameter("num2"));
		String id=request.getParameter("id");
		String pw1=request.getParameter("pw1");
		String pw2=request.getParameter("pw2");
		String mail=request.getParameter("mail");
		String mail1=request.getParameter("mail1");
		String mail2=request.getParameter("mail2");
		String post=request.getParameter("post");
		String ad1=request.getParameter("ad1");
		String ad2=request.getParameter("ad2");
		String tel=request.getParameter("tel");
		String job=request.getParameter("job");
		String sms=request.getParameter("sms");
		PrintWriter out=response.getWriter();
		out.print("<html><body>name: "+name);
//		out.print("<br>jumin: "+num1+"-"+num2);
//		out.print("<br>id: "+id);
//		out.print("<br>pw: "+pw1);
//		out.print("<br>mail1: "+mail1+"@"+mail2);
//		out.print("<br>mail2: "+mail1+"@"+mail);
//		out.print("<br>postnum: "+post);
//		out.print("<br>adr: "+ad1+" "+ad2);
//		out.print("<br>phone: "+tel);
//		out.print("<br>job: "+job);
//		out.print("<br>sms (ok or no): "+sms);
		out.print("</body></html>");
		out.close();
	}

-------------------------

** 가입폼 복붙

1.jsp

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
<form action="JoinServlet" method="get">
이름: <input type="text" name="name"><br>
주민등록번호: <input type="text" name="ju" placeholder="-없이 입력하세요"><br>
아이디: <input type="text" name="id"><br>
비밀번호: <input type="password" name="pass"><br>
비밀번호 확인: <input type="password" name="passcheck"><br>
이메일: <input type="text" name="email"><br>
우편번호: <input type="text" name="post"><br>
주소: <input type="text" name="addr"><br>
핸드폰 번호: <input type="text" name="tel"><br>
직업:
<select name="job">
<option value="student">학생</option>
<option value="programer">컴퓨터/인터넷</option>
<option value="reporter">언론</option>
</select><br>
메일 SMS 정보 수신 <input type="radio" name="yesno" value="yes">수신 <input type="radio" name="yesno" value=no>수신 거부<br>
<input type="submit" value="회원가입"> <input type="reset" value="취소">
</form>
</body>
</html>


2. 서블릿

package bean;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class JoinServlet
 */
@WebServlet("/JoinServlet")
public class JoinServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public JoinServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; charset=euc-kr");

		String name=request.getParameter("name");
		int jumin=Integer.parseInt(request.getParameter("ju"));
		String id=request.getParameter("id");
		String pw=request.getParameter("pass");
		String email=request.getParameter("email");
		String post=request.getParameter("post");
		String addr=request.getParameter("addr");
		String pnum=request.getParameter("tel");
		String job=request.getParameter("job");
		String yn=request.getParameter("yesno");

		PrintWriter out=response.getWriter();
		out.print("<html><body>");
		out.print("이름:"+name+"<br>");
		out.print("주민번호:"+jumin+"<br>");
		out.print("id:"+id+"<br>");
		out.print("pw:"+pw+"<br>");
		out.print("이메일:"+email+"<br>");
		out.print("우편 번호:"+post+"<br>");
		out.print("주소:"+addr+"<br>");
		out.print("폰 번호:"+pnum+"<br>");
		out.print("직업:"+job+"<br>");
		out.print("수신 동의/비동의:"+yn+"<br>");
		out.print("</body></html>");
		out.close();
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}

-------------------------

** 위 가입폼에 자바스크립트 코드
아이디 비어있으면 경고
아이디는 4글자 이상
css도 
인라인블락
float left 왼쪽배치

function cl(){
    if(form.id.value==null||form.id.value==""){
        alert("아이디를 채워주세요");
        return false;
    
    }else if(form.id.value.length<4){
        alert("아이디는 최소 4글자 이상");
        return false;
    }

}

--------------

***자바스크립트
익명 함수 prompt, alert 연습

    <script>
        var n=function(){
            var num=prompt('숫자입력',"숫자");
            alert(num);
            
        }
        n();
    </script>

---------------------

** 타임아웃
3초 후 팝업됨

    <script>
        setTimeout(function(){
            alert("3초가 지났다");
        },3000);
    </script>

-------------------------

** onload

window.onload=function(){
            // 모든 태그가 화면에 올라가는 순간
            // -> 로드 완료되는 순간
        }

-------------------------

** 노드생성

<script>
        window.onload=function(){
            var h=document.createElement('h3');
            var b=document.createTextNode("야야");
            h.appendChild(b);
            document.body.appendChild(h);
        }
    </script>

------------------------------------

// 문서객체 갖고 와서 헤드1,2를 자바1,2로 출력
=> 헤드에선 안떠서 온로드 필요

    <script>
        window.onload=function(){
            var a=document.getElementById("aa");
        var b=document.getElementById("bb");
        a.innerHTML="java1";
        b.innerHTML="java2";
        }
    </script>

------------------------------------

*** console.log( );

    <script>
        var a=document.getElementById("aa");
        var b=document.getElementById("bb");
        a.innerHTML="java1";
        b.innerHTML="java2";
        // 개발자도구 콘솔항목에서 보이게 하는 작업
        console.log(a.innerHTML+" "+b.innerHTML);
    </script>


----------------------

스타일 주기


    <h1 id="aa">head1</h1>
    <h1 id="bb">head2</h1>

    <script>
        var a=document.getElementById("aa");
        var b=document.getElementById("bb");
        
        a.style.border="3px dotted pink";
        a.style.color="violet";
        b.style.color="green";
        b.style.border="3px dotted lightgreen";
    </script>

---------------------

** 클릭시 이벤트

    <h1 id="aa">click</h1>
    <h1 id="bb">head2</h1>

    <script>
        var a=document.getElementById("aa");
        var b=document.getElementById("bb");
        a.onclick=function(){
            a.style.border="3px dotted pink";
            a.style.color="violet";
        }
        b.onclick=function(){
            b.style.color="green";
            b.style.border="3px dotted lightgreen";
        }
    </script>


------------------------------

4*5 입력칸
8*8 입력칸
결과버튼 다시버튼

입력칸에 넣은 답이 틀리면 4*5 에 줄이 그어짐

다시를 누르면 문제가 생성됨

=> 풀던거

    <span id="a">4*5</span> <input type="text" id="aa"><br>
    <span id="b">7*7</span> <input type="text" id="bb"><br>
    <button onclick="result()">결과</button>
    <button onclick="reset()">다시</button>
    <script>
        function result(){
            var a=document.getElementById("a").innerHTML;
            var aa=document.getElementById("aa");
            var b=document.getElementById("b").innerHTML;
            var bb=document.getElementById("bb");
            var aaa=
            aa.value=eval(a);
            bb.value=eval(b);
            if()
        }
    </script>


---------

** 선생님이 짠거(1차 오류)

text-decoration: line-through;



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            
        }
    </style>
    <script>
        var visual=null, cnt;
        function on(){
            var grade=document.getElementById("grade").innerHTML;
            
            var time=document.getElementById("time");
            
            cnt=10;
            if(visual!=null){
                clearTimeout(visual); 
                // 비주얼이 널값이 아니면 설정되어있던 시간을 중지
                outtime(time); // 널이면 함수실행
            }
        }

        function outtime(c){
            cnt--;
            c.innerHTML=cnt;
            if(cnt!=0)
            visual=setTimeout("outtime(time)",1000);
            //1초 후에 outtime() 함수 실행하겠다.
            else
            result();
        }

        function se(){
            var a=document.getElementsByClassName("aa");
            var b=document.getElementsByClassName("bb");


            for(var i=0;i<a.length;i++){
                var n1=Math.floor((Math.random()*9)+1);
                var n2=Math.floor((Math.random()*9)+1);
                var op=Math.floor(Math.random()*4); 
                // op 연산자 상수화
                var oper;
                switch(op){
                    case 0: oper='+';break;
                    case 1: oper='-';break;
                    case 2: oper='*';break;
                    case 3: oper='/';break;
                }
                a[i].innerHTML=n1+oper+n2;
                
            }
        }
        function result(){
            var score=0;
            var a=document.getElementsByClassName("aa");
            var b=document.getElementsByClassName("bb");

            for(var i=0;i<a.length;i++){
                var q=a[i].innerHTML;
                var r=b[i].value;
                var n=Math.floor(eval(q));
                if(parseInt(r)==n){
                    score++;
                }else if(r==""){
                    a[i].style.textdecoration="line-through";
                }else{
                    a[i].style.textdecoration="line-through";
                }
            }
            document.getElementById("grade").innerHTML=score;
        }
    </script>
</head>
<body onload="on(),se()">
    <div>남아있는 시간 <span id="time">0</span></div>
    <form >
        <table>
            <tr>
                <td class="aa"></td>
                <td class="bb">
                    <input  type="text" name="" id="">
                </td>
            </tr>
            <tr>
                <td class="aa"></td>
                <td class="bb">
                    <input type="text" name="" id="">
                </td>
            </tr>
            <tr>
                <td class="aa"></td>
                <td class="bb">
                    <input  type="text" name="" id="">
                </td>
            </tr>
            <tr>
               <td><button onload="on(),se()">다시</button></td>
               <td><span id="grade">0</span></td>
            </tr>
        </table>
    </form>

</body>
</html>



=============> 
주희거(성공)

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            
        }
    </style>
    <script>
        var visual=null, cnt;
        function on(){
            var grade=document.getElementById("grade").innerHTML;
            
            var time=document.getElementById("time");
            
            cnt=10;
            if(visual!=null){
                clearTimeout(visual); 
                // 비주얼이 널값이 아니면 설정되어있던 시간을 중지
                outtime(time); // 널이면 함수실행
            }
        }

        function outtime(c){
            cnt--;
            c.innerHTML=cnt;
            if(cnt!=0)
            visual=setTimeout("outtime(time)",1000);
            //1초 후에 outtime() 함수 실행하겠다.
            else
            result();
        }

        function se(){
            var a=document.getElementsByClassName("aa");
            var b=document.getElementsByClassName("bb");


            for(var i=0;i<a.length;i++){
                var n1=Math.floor((Math.random()*9)+1);
                var n2=Math.floor((Math.random()*9)+1);
                var op=Math.floor(Math.random()*4); 
                // op 연산자 상수화
                var oper;
                switch(op){
                    case 0: oper='+';break;
                    case 1: oper='-';break;
                    case 2: oper='*';break;
                    case 3: oper='/';break;
                }
                a[i].innerHTML=n1+oper+n2;
                
            }
        }
        function result(){
            var score=0;
            var a=document.getElementsByClassName("aa");
            var b=document.getElementsByClassName("bb");

            for(var i=0;i<a.length;i++){
                var q=a[i].innerHTML;
                var r=b[i].value;
                var n=Math.floor(eval(q));
                if(parseInt(r)==n){
                    score++;
                }else if(r==""){
                    a[i].style.textdecoration="line-through";
                }else{
                    a[i].style.textdecoration="line-through";
                }
            }
            document.getElementById("grade").innerHTML=score;
        }
    </script>
</head>
<body onload="on(),se()">
    <div>남아있는 시간 <span id="time">0</span></div>
    <form >
        <table>
            <tr>
                <td class="aa"></td>
                <td class="bb">
                    <input  type="text" name="" id="">
                </td>
            </tr>
            <tr>
                <td class="aa"></td>
                <td class="bb">
                    <input type="text" name="" id="">
                </td>
            </tr>
            <tr>
                <td class="aa"></td>
                <td class="bb">
                    <input  type="text" name="" id="">
                </td>
            </tr>
            <tr>
               <td><button onload="on(),se()">다시</button></td>
               <td><span id="grade">0</span></td>
            </tr>
        </table>
    </form>

</body>
</html>


=====>
선생님거 성공
<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Document</title>

    <script>

        var visual=null,cnt;

        function on(){

            document.getElementById("grade").innerHTML=0;

            var time=document.getElementById("time");

            cnt=10;

            if(visual!=null)

                clearTimeout(visual);

            outtime(time);

        }

        function outtime(c){

            cnt--;

            c.innerHTML=cnt;

            if(cnt!=0)

                visual=setTimeout("outtime(time)",1000);

            else

                result();

        }

        function se(){

            var a=document.getElementsByClassName("aa");

            var b=document.getElementsByClassName("bb");

​

            for(var i=0;i<a.length;i++){

                var n1=Math.floor(Math.random()*9);

                var n2=Math.floor(Math.random()*9);

                var op=Math.floor(Math.random()*4);

                var oper;

​

                switch(op){

                    case 0:

                        oper="+";

                        break;

                    case 1:

                        oper="-";

                        break;

                    case 2:

                        oper="*";

                        break;

                    case 3:

                        oper="/";

                        break;

                }

               a[i].innerHTML= n1+oper+n2;

            }

        }

        function result(){

            var score=0;

            var a=document.getElementsByClassName("aa");

            var b=document.getElementsByClassName("bb");

​

            for(i=0;i<a.length;i++){

                var q=a[i].innerHTML;

                var r=b[i].value; //내가 쓴답

                var n=Math.floor(eval(q)); //진짜 답

​

                if(parseInt(r)==n)

                    score+=1;

                else if(r==""){

                    a[i].style.textDecoration="line-through";

                }

                else{

                    a[i].style.textDecoration="line-through";

                }

​

            }

            document.getElementById("grade").innerHTML=score;

        }

​

​

    </script>

</head>

<body onload="on(),se()">

    <div>남아있는 시간<span id="time">0</span></div>

    <form>

        <table>

            <tr>

                <td class="aa"></td>

                <td><input class="bb" type="text"></td>

            </tr>

​

            <tr>

                <td class="aa"></td>

                <td><input class="bb" type="text"></td>

            </tr>

​

            <tr>

                <td class="aa"></td>

                <td><input class="bb" type="text"></td>

            </tr>

​

            <tr>

                <td><button type="button"

                    onclick="on(),se()">다시</button></td>

                <td><span id="grade">0</span></td>

            </tr>

        </table>

    </form>    

</body>

</html>


----------------

*** jsp 디비

1. Class . forName() 메소드 이용하여 jdbc 드라이버 로딩

2. Connection 객체  : 데이터베이스에 연결해 작업을 수행할 수 있도록 만들어 주는 중요 객체
=>Connection 은 인터페이스여서 객체 직접 생성 불가함.
=>다른 객체의 메소드로부터 생성(상속)

3. 실제 sql문을 실행하기 위해서는 Statement 객체 생성필요

Statement stmt= conn.createStatement();

=> 주요 메소드
- executeQuery() : select 문과 같이 결과값이 여러개일 경우 사용됨
- executeUpdate() : 데이터 조작(insert, update, delete문) 테이블 내용이 변경만 되고 결과값이 없는 경우에 사용

String sql="select * from student";
ResultSet r= stmt.executeQuery(sql);


- ResultSet : 반환된 값 저장(행)
값 가져올땐 getString, getInt .....
int age=r.getInt("age");
// 괄호 안에 인덱스번호 넣어도 되고 열 이름 넣어도 됨


* PreparedStatement (Statement의 하위클래스)
=> 간단하게 쿼리문을 작성할 수 있도록
Statement의 서브 인터페이스(단점 보완)

PreparedStatement pstm=conn.prepareStatement(sql);

? : 바인드 변수-값을 직접 지정하지 않고 매번 변경되는 값
pstm.setString(?인덱스, value);

-------------------------------

** 디비 연습

create table tbl(id varchar2(30),
pw varchar2(30),
name varchar2(30),
email varchar2(30),
adr varchar2(30),
job varchar2(30));

insert into tbl values('i','p','na','ma','ad','jo');

테이블 생성 하고 값 넣기

- use.jsp 


<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<%@ page import="java.util.*,bean.*" %><!-- bean패키지에 있는 거 다 -->
<%@ page import = "java.sql.*" %>
<%
   Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();//1.인스턴스 드라이브 생성
   Connection con=null;
   Statement stmt=null;
   ResultSet rs=null;
   
   String id="", pwd="", name="",email="",adr="",job="";
   int cnt=0;
   try{
      con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","sys as sysdba","djaak5685");
      stmt=con.createStatement();
      rs=stmt.executeQuery("select * from tbl");
   
   
%>


<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
   <table border="1" bordercolor="yellow">
   <tr>
      <td>ID</td>
      <td>PWD</td>
      <td>NAME</td>
      <td>EMAIL</td>
      <td>ADR</td>
      <td>JOB</td>
   </tr>
   <%
      if(rs!=null){
         while(rs.next()){
            id=rs.getString("id"); //내가 적은 id 값 가져오기
            pwd=rs.getString("pw");
            name=rs.getString("name");
            email=rs.getString("email");
            adr=rs.getString("adr");
            job=rs.getString("job");
            %>
      <tr>
         <td><%=id%></td>
         <td><%=pwd%></td>
         <td><%=name%></td>
         <td><%=email%></td>
         <td><%=adr%></td>
         <td><%=job%></td>
      </tr>
   
   <%
         }
      }
         }catch(Exception e){
            System.out.println("exception");
         }
         rs.close();
         stmt.close();
         con.close();
   %>
   </table>
</body>
</html>


--------------

아이디: -------
비번: -----
비번확인: ---------
이메일: -------
번호: ---------
당신의 취미: 체크박스(캠핑,영화,독서..)
직업: 셀렉트(교사,학생,직딩..)
연령: 라디오(10대,20,30,40..)
하고픈말: 텍스트에어리어

가입버튼(submit) 취소버튼


<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
    </head>
    <body>
        <form action="" method="get">
            <table>
              <tr>
                  <td>아이디: </td><td><input name="id"></td>
              </tr>
              <tr>
                  <td>비번: </td><td><input type="password" name="pw1"></td>
              </tr>
              <tr>
                  <td>비번확인: </td><td><input type="password" name="pw2"></td>
              </tr>
              <tr>
                  <td>이메일: </td><td><input type="email" name="email"></td>
              </tr>
              <tr>
                  <td>번호: </td><td><input type="tel" name="tel"></td>
              </tr>
              <tr>
                  <td>당신의 취미: </td>
                  <td>
                    <input name="hobby" type="checkbox" value="cam">캠핑
                    <input name="hobby" type="checkbox" value="movie">영화
                    <input name="hobby" type="checkbox" value="book">독서
                  </td>
              </tr>
              <tr>
                  <td>직업: </td>
                  <td>
                      <select name="job">
                          <option value="teacher">교사</option>
                          <option value="student">학생</option>
                          <option value="sal">회사원</option>
                      </select>
                  </td>
              </tr>
              <tr>
                  <td>연령: </td>
                  <td>
                    <input name="age" type="radio" value="10s">10대
                    <input name="age" type="radio" value="20s">20대
                    <input name="age" type="radio" value="30s">30대
                    <input name="age" type="radio" value="40s">40대
                </td>
              </tr>
              <tr>
                  <td>하고싶은 말: </td>
                  <td><textarea name="hope" cols="10" rows="3"></textarea></td>
              </tr>
            </table>
            <input type="submit" value="가입">
            <input type="reset" value="취소">
        </form>
    </body>
</html>



* 페이지 강제이동
<% response.sendRedirect("http://www.naver.com"); %>

---------------------------------

1. 라디오버튼으로 성별(m,w)를 준 후 선택하여 m을 선택하면 man, w를 선택하면 woman을 출력해라. (jsp파일 두개로 코드 작성) 

- a.jsp

<form method="get" action="b.jsp">
<input type="radio" name="wm" value="m">남자
<input type="radio" name="wm" value="w">여자
<input type="submit"value="이동">
</form>

- b.jsp

<%
String wm=request.getParameter("wm");
out.print(wm);
%>


2. 위 1번을 서블릿으로 변경해라. 

- 서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	response.setContentType("text/html; setChar=UTF-8");
	String a=request.getParameter("wm");
	PrintWriter out=response.getWriter();
	out.print("<html><body>"+a+"</body></html>");
	
	}


3. 1번에서 만든 폼을 가지고 선택한 라디오 버튼에 따라 <jsp:forward>태그를 이용하여 이동할 페이지를 따로 만들어라(action1.jsp)

m을 선택하면 man.jsp로 이동해 “man” , w를 선택하면 woman.jsp로 이동해 “woman”출력


- a.jsp

<form method="get" action="b.jsp">
<input type="radio" name="wm" value="m">남자
<input type="radio" name="wm" value="w">여자
<input type="submit"value="이동">
</form>

- b.jsp

<% 
String a=request.getParameter("wm");
if(a.equals("w")){ %>
<jsp:forward page="action2.jsp"/>
	
<% }else{ %>
<jsp:forward page="action1.jsp"/>
<% } %>


-action1 

<%
out.print("man");
%>

- action2

<%
out.print("woman");
%>

----------------------------------

** 원하는 항목 값을 얻어와 서블릿 클래스에서 출력
관심분야는 for문으로 출력
다시 버튼 누르면 전페이지 이동

- sel.jsp

<form action="Sel" method="get">
<span style="float:left; margin-right:10px">
<label for="job">직업</label>
<select id="job" name="job" size="1">
<option value="student">학생</option>
<option value="IT">IT</option>
<option value="doctor">의사</option>
</select>
</span>
<label for="inter" style="float:left;">취미</label>
<select id="inter" name="inter" 
size="4" multiple="multiple"> 
<!-- 멀티플은 다중선택, 리스트형태 -->
<option value="movie">영화</option>
<option value="book">책</option>
<option value="study">공부</option>
<option value="eat">먹기</option>
</select>
<input type="submit" value="전송">
</form>


- Sel.java 서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	 
		response.setContentType("text/html;setchar=UTF-8");
		String job=request.getParameter("job");
		String inter[]=request.getParameterValues("inter");
		
		PrintWriter out=response.getWriter();
		
		out.print("<html><body>");
		out.print("job: "+job+"<br>inter: ");
		for(String i : inter) {
			out.print(i+" / ");
		}
		out.print("<br><a href=sel.jsp>back</a>");
		out.print("</body></html>");
	}


---------------------

** 자바스크립트
setInterval(), clearInterval()을 이용해 <div>태그에 시계를 출력해라. 시계 위를 클릭하면 시계 멈추고 클릭하면 현재 시간부터 시계가 다시 간다.

        var a=null;
        function start(){
            
        a=setInterval(function(){
            var n=document.getElementById("aa");
            var now=new Date();
            n.innerHTML=now.toLocaleTimeString();
        },1000);
        }

        function stop(){
            clearTimeout(a);
        }


-------------------------------

*** 자바스크립트(onmouseover, onmouseout, querySelector)
마우스 올리면 글자 보이고 내리면 안보이는 이벤트

   <body>
        <ul>
            <li onmouseover="show(event,
            '라면은 건강에 안좋아요')"
            onmouseout="hide()">라면</li>
            <li onmouseover=
            "show(event,'치킨은 맛있어')"
            onmouseout="hide()">치킨</li>
        </ul>
        <div id="aa"></div>
        <script>
            function show(e,msg){
                var n=document.querySelector("#aa");
                n.innerHTML=msg;
                n.style.visibility="visible";
                
            }
            function hide(){
                var m=document.querySelector("#aa");
                m.style.visibility="hidden";
            }
        </script>
    </body>


--------------------

*** jsp 가입폼

1. MemberJoin


<form action="MemberJoinProc.jsp" method="post">
		<table>
			<tr>
				<td>아이디:</td>
				<td><input name="id"></td>
			</tr>
			<tr>
				<td>비번:</td>
				<td><input type="password" name="pw1"></td>
			</tr>
			<tr>
				<td>비번확인:</td>
				<td><input type="password" name="pw2"></td>
			</tr>
			<tr>
				<td>이메일:</td>
				<td><input type="email" name="email"></td>
			</tr>
			<tr>
				<td>번호:</td>
				<td><input type="tel" name="tel"></td>
			</tr>
			<tr>
				<td>당신의 취미:</td>
				<td><input name="hobby" type="checkbox" value="cam">캠핑
					<input name="hobby" type="checkbox" value="movie">영화 <input
					name="hobby" type="checkbox" value="book">독서</td>
			</tr>
			<tr>
				<td>직업:</td>
				<td><select name="job">
						<option value="teacher">교사</option>
						<option value="student">학생</option>
						<option value="sal">회사원</option>
				</select></td>
			</tr>
			<tr>
				<td>연령:</td>
				<td>
				<input name="age" type="radio" value="10s">10대 
				<input name="age" type="radio" value="20s">20대 
				<input name="age" type="radio" value="30s">30대 
				<input name="age" type="radio" value="40s">40대
				</td>
			</tr>
			<tr>
				<td>하고싶은 말:</td>
				<td><textarea name="hope" cols="10" rows="3"></textarea></td>
			</tr>
		</table>
		<input type="submit" value="가입"> <input type="reset"
			value="취소">
	</form>


-------------------------------------

2. MemberJoinProc.jsp


<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
<% 
	request.setCharacterEncoding("euc-kr");
	String hobby[]=request.getParameterValues("hobby");
	String txt=" ";
	for(int i=0;i<hobby.length;i++){
		txt+=hobby[i];
		
	}
%>

<jsp:useBean id="mbean" class="model.Memberbean">
<jsp:setProperty property="*" name="mbean"/>
</jsp:useBean>

<% 
	// 취미 복수선택한 값을 하나의 문자열로 저장해서 셋팅
	mbean.setHobby(txt);
		
	String id="sys as sysdba";
	String pw="djaak5685";
	String url="jdbc:oracle:thin:@localhost:1521/xe";
	try{
		// 오라클 jdbc 이용하겠다고 선언. 로딩하는 작업
		Class.forName("oracle.jdbc.driver.OracleDriver");
		// 드라이버 연결 -> db 접속
		Connection con=DriverManager.getConnection(url,id,pw);
		
		String sql="insert into Mem values(?,?,?,?,?,?,?,?)";
		PreparedStatement pstm=con.prepareStatement(sql);
		pstm.setString(1,mbean.getId());
		pstm.setString(2,mbean.getPw1());
		pstm.setString(3,mbean.getEmail());
		pstm.setString(4,mbean.getTel());
		pstm.setString(5,mbean.getHobby());
		pstm.setString(6,mbean.getJob());
		pstm.setString(7,mbean.getAge());
		pstm.setString(8,mbean.getInfo());
		
		pstm.executeUpdate(); // 데이터갱신
		
		pstm.close();
		con.close();
	}catch(Exception e){
		e.printStackTrace();
	}
%>
완료

</body>
</html>



---------------------------------

** Mem 테이블 생성
create table Mem(id varchar2(30), pw1 varchar2(30),
email varchar2(30), tel varchar2(30),
hobby varchar2(30), job varchar2(30),
age varchar2(30), info varchar2(30));

---------------------------------



*** 디비 연결 연습 ***

1. RegisterBean.java 생성(model 패키지, 폼에 작성한 값 게터세터)

2. Register.java
회원정보 변경

3. 


- use.jsp ***********************

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<%@ page import="java.util.*" %><!-- bean패키지에 있는 거 다 -->
<%@ page import = "java.sql.*,model.*" %>
<%
   Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();//1.인스턴스 드라이브 생성
   Connection con=null;
   Statement stmt=null;
   ResultSet rs=null;
   
   String id="", pwd="", name="",email="",adr="",job="";
   int cnt=0;
   try{
      con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","sys as sysdba","djaak5685");
      stmt=con.createStatement();
      rs=stmt.executeQuery("select * from tbl");
%>


<!DOCTYPE html>
<html>
<head>
<style type="text/css"></style>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
   <table border="1" bordercolor="yellow">
   <tr>
      <td>ID</td>
      <td>PWD</td>
      <td>NAME</td>
      <td>EMAIL</td>
      <td>ADR</td>
      <td>JOB</td>
   </tr>
   <%
      if(rs!=null){
         while(rs.next()){
            id=rs.getString("id"); //내가 적은 id 값 가져오기
            pwd=rs.getString("pw");
            name=rs.getString("name");
            email=rs.getString("email");
            adr=rs.getString("adr");
            job=rs.getString("job");
            %>
      <tr>
         <td><%=id%></td>
         <td><%=pwd%></td>
         <td><%=name%></td>
         <td><%=email%></td>
         <td><%=adr%></td>
         <td><%=job%></td>
      </tr>
   
   <%
         }
      }
         }catch(Exception e){
            System.out.println("exception");
         }
         rs.close();
         stmt.close();
         con.close();
   %>
   </table>
</body>
</html>


- RegisterBean.java ***********************

package model;

public class RegisterBean {
	private String id;
	private String pw;
	private String name;
	private String email;
	private String adr;
	
	public String getId() {
		return id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public String getPw() {
		return pw;
	}
	public void setPw(String pw) {
		this.pw = pw;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getAdr() {
		return adr;
	}
	public void setAdr(String adr) {
		this.adr = adr;
	}
	public String getJob() {
		return job;
	}
	public void setJob(String job) {
		this.job = job;
	}
	private String job;
}


- RegisterM***********************

package model;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;


public class RegisterM {

	private final String JDBC_DRIVER=
			"oracle.jdbc.driver.OracleDriver";
	private final String JDBC_URL=
			"jdbc:oracle:thin:@localhost:1521/xe";
	private final String USER="sys as sysdba";
	private final String PASS="djaak5685";
	
	public RegisterM() {
		try {
			Class.forName(JDBC_DRIVER);
			
		}catch(Exception e) {
			System.out.println("에러");
		}
	}
	public Vector<RegisterBean> getRegi(){
		Connection con=null;
		Statement stmt=null;
		ResultSet rs=null;
		
		Vector<RegisterBean> v=new Vector<RegisterBean>();
		try {
			con=DriverManager.getConnection(JDBC_URL,USER,PASS);
			String query="select * from tbl";
			stmt=con.createStatement();
			rs=stmt.executeQuery(query);
			
			RegisterBean bean=new RegisterBean();
			while(rs.next()) {
				bean.setId(rs.getString("id"));
				bean.setPw(rs.getString("pw"));
				bean.setName(rs.getString("name"));
				bean.setEmail(rs.getString("email"));
				bean.setAdr(rs.getString("adr"));
				bean.setJob(rs.getString("job"));
				
				v.addElement(bean);
			}
			
			rs.close();
			stmt.close();
			con.close();
		}catch (Exception e) {
			System.out.println("에러");
		}
		
		return v;
	}
}



- usingJDBC.jsp ***********************



<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<%@ page import="java.util.*,model.*" %>
<jsp:useBean id="reg" class="model.RegisterM"/>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	<table border="1" bordercolor="yellow">
   <tr>
      <td>ID</td>
      <td>PW</td>
      <td>NAME</td>
      <td>EMAIL</td>
      <td>ADR</td>
      <td>JOB</td>
   </tr>
   <%
   
   Vector<RegisterBean> v=reg.getRegi();
   for(int i=0;i<v.size();i++){
	   RegisterBean regi=v.get(i);
   %> 
   <tr> 
   <td><%=regi.getId() %></td>
   <td><%=regi.getPw() %></td>
   <td><%=regi.getName() %></td>
   <td><%=regi.getEmail() %></td>
   <td><%=regi.getAdr() %></td>
   <td><%=regi.getJob() %></td>
   
   </tr>
   <% } %>
   </table>
</body>
</html>



--------------------------------------


** 자바스크립트
마우스 올리면 글자색 변경(add이벤트리스너 이용)

    <body onload="on()">
       <div id="div">마우스를 올리면 red색</div>
       
       <script>
           var div=document.getElementById("div");
           div.addEventListener('mouseover',function(){
            this.style.color='red';
           });
           div.addEventListener('mouseout',function(){
            this.style.color='black';
           });
       </script>
    </body>

----------------------------------

** 위에거 익명함수로

var div=document.getElementById("div");

            div.onmouseover=function(){
                this.style.color='red';
            }
            div.onmouseout=function(){
                this.style.color='black';
            }


------------------------------------


** 라디오버튼 선택 후 버튼 누르면
바디에 선택한 값 출력
해당 글자 클릭하면 바디에서 삭제

    <body>
        <input type="radio" name="color" 
        value="red">빨강
        <input type="radio" name="color" 
        value="yellow">노랑
        <input type="button" value="check"
         onclick="ch()">초록
       <script>
           function ch(){
               var a=document.getElementsByName("color");
               var b=document.createElement('h1');
               document.body.appendChild(b);
               for(var i in a){
                   if(a[i].checked==true){
                       b.innerHTML=a[i].value+"가 체크됐다";
                   }
               }
               b.onclick=function(){
                   document.body.removeChild(this);
               }
           }
       </script>
    </body>


-------------------------

**** jsp
좋아하는 계절 체크박스 선택해서 모두 출력

- a.jsp

<body>
좋아하는 계절: 
<input type="checkbox" name="se" value="1">봄
<input type="checkbox" name="se" value="2">여름
<input type="checkbox" name="se" value="3" checked>가을
<input type="checkbox" name="se" value="4">겨울
</body>


-b.jsp

<% 
String s[]=request.getParameterValues("se");
String a=null;
for(int i=0;i<s.length;i++){
	int n=Integer.parseInt(s[i]);
	
	switch(n){
	case 1: a="봄"; break;
	case 2: a="여름"; break;
	case 3: a="가을"; break;
	case 4: a="겨울"; break;
	}
	out.print(a+" ");
}

%>



=> 서블릿

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		response.setContentType("text/html;setchar=utf-8");
		PrintWriter out=response.getWriter();
		String s[]=request.getParameterValues("se");
		String a=null;
		for(int i=0;i<s.length;i++){
			int n=Integer.parseInt(s[i]);
			
			switch(n){
			case 1: a="bom"; break;
			case 2: a="y"; break;
			case 3: a="g"; break;
			case 4: a="gg"; break;
			}
			out.print(a+" ");
		}
		
		out.close();
	}


------------------------


** 가입폼

MemberDAO md=new MemberDAO();
md.insertMember(mbean);
MemberList.jsp



 	String id="sys as sysdba";
	String pw="djaak5685";
	String url="jdbc:oracle:thin:@localhost:1521/xe";
	try{
		// 오라클 jdbc 이용하겠다고 선언. 로딩하는 작업
		Class.forName("oracle.jdbc.driver.OracleDriver");
		// 드라이버 연결 -> db 접속
		Connection con=DriverManager.getConnection(url,id,pw);
		
		String sql="insert into Mem values(?,?,?,?,?,?,?,?)";
		PreparedStatement pstm=con.prepareStatement(sql);
		pstm.setString(1,mbean.getId());
		pstm.setString(2,mbean.getPw1());
		pstm.setString(3,mbean.getEmail());
		pstm.setString(4,mbean.getTel());
		pstm.setString(5,mbean.getHobby());
		pstm.setString(6,mbean.getJob());
		pstm.setString(7,mbean.getAge());
		pstm.setString(8,mbean.getInfo());
		
		pstm.executeUpdate(); // 데이터갱신
		
		pstm.close();
		con.close();
	}catch(Exception e){
		e.printStackTrace();
	}


******

- MemberDAO


package model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;

public class MemberDAO { 
	
 	String id="sys as sysdba";
	String pw="djaak5685";
	String url="jdbc:oracle:thin:@localhost:1521/xe";
	
	Connection con; // 디비에 접근하는 객체
	PreparedStatement pstm; // 쿼리실행(조작)하는 객체
	ResultSet rs; // 결과 리턴받아 자바에 저장하는 객체
	
	public void getCon() { // 디비 연결함수
		try{
			// 오라클 jdbc 이용하겠다고 선언. 로딩하는 작업
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// 드라이버 연결 -> db 접속
			con=DriverManager.getConnection(url,id,pw);
			
			System.out.println("디비접속 성공");
		}catch(Exception e){
			System.out.println("디비접속에러");
		}
	}
	
	public void insertMember(Memberbean mbean) { // insert into 삽입
		getCon(); // 디비 접속 함수호출
		try {
			
			String sql="insert into Mem values(?,?,?,?,?,?,?,?)";
			pstm=con.prepareStatement(sql);
			pstm.setString(1,mbean.getId());
			pstm.setString(2,mbean.getPw1());
			pstm.setString(3,mbean.getEmail());
			pstm.setString(4,mbean.getTel());
			pstm.setString(5,mbean.getHobby());
			pstm.setString(6,mbean.getJob());
			pstm.setString(7,mbean.getAge());
			pstm.setString(8,mbean.getInfo());
			
			pstm.executeUpdate(); // 데이터갱신
			
			pstm.close();
			con.close();

		}catch (Exception e) {
			System.out.println("insert 오류");
		}
		
	}
	
	public Vector<Memberbean> allMember() {
		Vector<Memberbean> v=new Vector<Memberbean>();
		getCon();
		try {
			
			String sql="select * from mem";
			pstm=con.prepareStatement(sql);
			rs=pstm.executeQuery();
			
			while(rs.next()) {
				Memberbean bean=new Memberbean();
				bean.setId(rs.getString(1));
				bean.setPw1(rs.getString(2));
				bean.setEmail(rs.getString(3));
				bean.setTel(rs.getString(4));
				bean.setHobby(rs.getString(5));
				bean.setJob(rs.getString(6));
				bean.setAge(rs.getString(7));
				bean.setInfo(rs.getString(8));
				
				//memberbean클래스가 패키징됨
				v.addElement(bean);
			}
			pstm.close();
			rs.close();
			con.close();
			
		}catch (Exception e) {
			System.out.println("allMember 오류");
		}
		
		return v;
	}
	public Memberbean oneMember(String id) {
		
		Memberbean bean=new Memberbean();
		getCon();
		try {
			
			String sql="select * from mem where id=?";
			pstm=con.prepareStatement(sql);
			
			pstm.setString(1,id);
			rs=pstm.executeQuery();
			
			if(rs.next()) { // 값이 있다면
				bean.setId(rs.getString(1));
				bean.setPw1(rs.getString(2));
				bean.setEmail(rs.getString(3));
				bean.setTel(rs.getString(4));
				bean.setHobby(rs.getString(5));
				bean.setJob(rs.getString(6));
				bean.setAge(rs.getString(7));
				bean.setInfo(rs.getString(8));
				
			}
			pstm.close();
			rs.close();
			con.close();
			
		}catch (Exception e) {
			System.out.println("oneMember 오류");
		}
		
		return bean;
	}
}



****

-  MemberList.jsp


<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
    <!-- 벡터 등등 임포트 -->
<%@page import="java.util.Vector"%>
<%@ page import="model.Memberbean" %>
<%@ page import="model.MemberDAO" %>
<!DOCTYPE html>
<html>
<body>
<!-- 모든 회원 정보 가져오는 파일 -->
<%
   MemberDAO md=new MemberDAO(); //객체 만들어서 불러오기
   Vector<Memberbean> v=md.allMember();
%>
<center>
<table width="800" border="1">
   <tr height="50">
   <td align="center" width="150">아이디</td>
   <td align="center" width="250">이메일</td>
   <td align="center" width="200">전화번호</td>
   <td align="center" width="200">취미</td>   
   </tr>
   
   <%
     for(int i=0;i<v.size();i++){
        //멤버빈 객체에 저장시켜라.
        Memberbean bean = v.get(i); // i번째 회원 정보를 의미
   %>
   <tr height="50">
   <td align="center" width="150"><%=bean.getId() %></td>
   <td align="center" width="250"><%=bean.getEmail() %></td>
   <td align="center" width="200"><%=bean.getTel() %></td>
   <td align="center" width="200"><%=bean.getHobby() %></td>
   <%} %>
   </tr>
   </table>
</center>
</body>
</html>

-------------------------


1. Memberbean : 자바빈 클래스(게터세터)
id,pw,job...등등 필드에 입력한 값을 빈 클래스에 저장하는 클래스.
->useBean으로부터 한꺼번에 데이터 받아옴

2. MemberJoin.jsp : HTML 가입 폼

3. MemberJoinProc.jsp : 멤버조인에서 전송 누르면 이동되는 페이지.
-> 멤버조인에 입력된 데이터 모두 자바빈 클래스에 useBean으로 저장.
-> MemberDAO 클래스 호출하여 useBean으로 저장한 데이터 한번에 디비로 저장.
> 작업이 완료되면 MemberList 클래스로 이동(회원정보 모두 띄워주기)

4. MemberDAO : 데이터베이스 연결하는 클래스.
-> db접속, 쿼리문, 등등

5. MemberList.jsp : 입력한 회원정보 화면에 출력하는 페이지.

6. MemberIn.jsp : 멤버리스트에서 아이디 클릭시 이동되는 페이지. 리스트에서 불러온 아이디값을 전달받음.
디비에서 선택된 아이디를 가진 한 회원의 정보 조회


-----------------------

****자바스크립트

    <body id="bo">
        <p>안녕하세요</p>
        <a href="javascript:cc()">div객체생성</a>
        <script>
            function cc(){
                var a=document.createElement('div');
                var b=document.getElementById("bo");
                b.appendChild(a);
                a.innerHTML="div";
            }
        </script>
    </body>

---------------------

// 
마우스 올린 상태로 3초가 지나면 구글페이지에 연결
3초전에 마우스 떼면 타이머 해제

    <body>
        <div id="div">마우스 올려</div>
        <script>
           var a=document.getElementById('div');
           var b;
           a.onmouseover=function(){
           b=setTimeout(function(){
            location.href="http://www.naver.com";
           },3000);
               
            }
            a.onmouseout=function(){
                clearTimeout(b)
                alert("취소");
            
           }
        </script>
    </body>

-----------------------------


다음 구조의 Employee 테이블을 생성하고 데이터를 추가해 테이블 출력해라.

(employee.jsp 파일 생성해서 구현) 

테이블 구조

create table Employee (name varchar2(20),
address varchar2(50),
ssn varchar2(50));

insert into Employee values('tom','seoul','970224-1039234');
insert into Employee values('juli','pusan','001222-1038782');
insert into Employee values('Jack','ulsan','981221-1829192');

select * from Employee;

************
- jsp



<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>

<%
Class.forName("oracle.jdbc.driver.OracleDriver");
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","sys as sysdba","djaak5685");
PreparedStatement pstm=con.prepareStatement("select * from Employee");
ResultSet r=pstm.executeQuery();
String name=null;
String address=null;
String ssn=null;
try{
	
	while(r.next()){
		 name=r.getString(1);
		 address=r.getString(2);
		 ssn=r.getString(3); %>
		 
		 <%=name+" "+address+" "+ssn+"<br>"%>
<% 	}
	
	r.close();
	pstm.close();
	con.close();
}catch(Exception e){
	System.out.print("오류");
}
%>

</body>
</html>


----------------------------

** 위 jsp 코드 출력시
table로 출력하려면
out.print("<table>");
out.print("<tr>");
out.print("<td>+r.getString(1))+</td>");
out.print("</tr>");
out.print("</table>");

이렇게 해도 됨!!!

----------------------------

문제2. 
다음 DB를 구현해라.

item테이블을 생성하고, itemForm.jsp에서 정보 입력받아 전송버튼을 누르면 item.jsp로 입력된 정보가 전송된다. 그 정보를 item테이블에 추가한다.


테이블:
create table item(name varchar2(20),
price number(8),
desc1 varchar2(100));


- 입력 폼

<body>
	<form action="itemForm.jsp" method="get">
	<table>
	<tr>
	<td>상품이름: </td><td><input name="name"></td>
	</tr>
	<tr>
	<td>가격: </td><td><input name="price"></td>
	</tr>
	<tr>
	<td>상품설명: </td><td><input name="desc"></td>
	</tr>
	</table>
	<input type="submit" value="전송">
	</form>
</body>

********************

- 디비연결


<%
Class.forName("oracle.jdbc.driver.OracleDriver");
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","sys as sysdba","djaak5685");
PreparedStatement pstm=con.prepareStatement("insert into item values(?,?,?)");

try{
pstm.setString(1,request.getParameter("name"));
pstm.setInt(2,Integer.parseInt(request.getParameter("price")));
pstm.setString(3,request.getParameter("desc"));

pstm.executeUpdate();
	pstm.close();
	con.close();
	
out.print("전송완료");
}catch(Exception e){
	System.out.print("오류");
}
%>



-----------------------------------

문제3.

PersonForm.jsp

	<form action="Person.jsp" method="get">
	<table>
	<tr>
	<td>이름: </td><td><input name="name"></td>
	</tr>
	<tr>
	<td>별명: </td><td><input name="nic"></td>
	</tr>
	<tr>
	<td>직업: </td><td><input name="job"></td>
	</tr>
	<tr>
	<td>메일: </td><td><input name="mail"></td>
	</tr>
	</table>
	<input type="submit" value="전송">
	</form>



-Person.java

package model;

public class Person {
private String name;
private String nic;
private String job;
private String mail;
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getNic() {
	return nic;
}
public void setNic(String nic) {
	this.nic = nic;
}
public String getJob() {
	return job;
}
public void setJob(String job) {
	this.job = job;
}
public String getMail() {
	return mail;
}
public void setMail(String mail) {
	this.mail = mail;
}
}



-Person.jsp

<body>
<jsp:useBean id="p" class="model.Person">
<jsp:setProperty property="*" name="p"/>
</jsp:useBean>
<table>
<tr>
<td>이름: </td><td><%=p.getName() %></td>
</tr>
<tr>
<td>별명: </td><td><%=p.getNic() %></td>
</tr>
<tr>
<td>직업: </td><td><%=p.getJob() %></td>
</tr>
<tr>
<td>메일: </td><td><%=p.getMail() %></td>
</tr>
</table>
</body>

-------------------------------------


*** 회원가입폼 연습****

- MemberIn 파일에서 정보수정 버튼 만듦

<table width="800" border="1">
   <tr height="50">
   <td align="center" width="150">ID</td>
   <td width="250"><%=mbean.getId() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">EMAIL</td>
   <td width="250"><%=mbean.getEmail() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">TEL</td>
   <td width="250"><%=mbean.getTel() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">HOBBY</td>
   <td width="250"><%=mbean.getHobby() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">JOB</td>
   <td width="250"><%=mbean.getJob() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">AGE</td>
   <td width="250"><%=mbean.getAge() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">INFO</td>
   <td width="250"><%=mbean.getInfo() %></td>
   </tr>
   <tr height="50">
   <td align="center" colspan=2>
<!-- 정보수정 버튼 id정보 다음 페이지로 전송-->
   <button onclick="location.href='MemberUpdateForm.jsp?id=<%=mbean.getId() %>'">
회원정보수정</button></td>
	</tr>
</table>


- MemberUpdateForm.jsp

<%@page import="model.Memberbean"%>
<%@page import="model.MemberDAO"%>
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
<%
String id=request.getParameter("id");
MemberDAO md=new MemberDAO(); // 디비 쿼리문 실행할 객체 생성
Memberbean mbean= md.oneMember(id);
%>
<center>
<h1>회원 정보 수정</h1>
<form action="MemberUpdateFormProc.jsp" method="post">
<table width="800" border="1">
   <tr height="50">
   <td align="center" width="150">ID</td>
   <td width="250"><%=mbean.getId() %></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">EMAIL</td>
   <td width="250"><input type="email" name="email" value="<%=mbean.getEmail() %>"></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">TEL</td>
   <td width="250"><input type="tel" name="tel" value="<%=mbean.getTel() %>"></td>
   </tr>
   <tr height="50">
   <td align="center" width="150">PASSWORD</td>
   <td width="250"><input type="password" name="pw1" value="<%=mbean.getPw1() %>"></td>
   </tr>
   
   <tr height="50">
   <td align="center" colspan=2>
   <input type="hidden" name="id" value="<%=mbean.getId() %>">
   <input type="submit" value="수정완료">
	<button onclick="location.href='MemberList.jsp'">전체회원</button>
	</td>
	</tr>
</table>
</form>
</center>
</body>
</html>


----------------------------

- MemberUpdateFormProc.jsp




---------------------------

MemberDAO 클래스에 getPass 함수생성 :
회원의 패스워드 값을 리턴받는 메소드
-> 회원정보 수정시 비번이 일치해야 변경가능하므로


	public String getPass(String id) {
		String pass="";
		getCon();
		String sql="select pw1 from mem where id=?";
		
		try {
			pstm=con.prepareStatement(sql);
			pstm.setString(1,id);
			rs=pstm.executeQuery();
			if(rs.next()) {
				pass=rs.getString(1);
			}
			rs.close();
			pstm.close();
			con.close();
		}catch(Exception e) {
			System.out.println("겟패스 오류");
		}
	return pass;
	}


-------------------------

** update 함수 // 회원정보 수정

	public void update(Memberbean bean) {
		getCon();
		String sql="update mem set email=?, tel=? where id=?";
		try {
			pstm=con.prepareStatement(sql);
			pstm.setString(1, bean.getEmail());
			pstm.setString(2, bean.getTel());
			pstm.setString(3, bean.getId());
			pstm.executeUpdate();
			pstm.close();
			con.close();
		}catch(Exception e) {
			System.out.println("업데이트 오류");
		}
	}


-------------------------------

**  delete 함수(회원정보 삭제)


	public void delete(String id) {
		getCon();
		String sql="delete from mem where id=?";
		try {
			pstm=con.prepareStatement(sql);
			pstm.setString(1, id);
			pstm.executeUpdate();
			pstm.close();
			con.close();
		}catch(Exception e) {
			System.out.println("삭제 오류");
		}
	}


----------------

*** 커넥션 풀
Context initctx=new ItitialContext();
// 외부에서 데이터를 읽어들여야 함

Context envctx = (Context) initctx.lookup("java:comp/env");
// 톰캣 서버에 정보를 담아놓은 곳으로 이동

DataSource ds=(DataSource)envctx.lookup("jdbc/pool");
// 데이터 소스 객체 선언

con=ds.getConnection();


forward 연습

- 첫페이지

<%
String name="tom";
%>
<jsp:forward page="two.jsp">
<jsp:param value='<%=name %>' name="name"/>
</jsp:forward>


- 두번째
<%
String name=request.getParameter("name");
out.print(name);
%>


---------------------

유효성 검사 : 입력칸에 입력을 안했을때 이벤트 처리. 보통 자바스크립트로 많이 함

--------------------------


2. 다음을 보고 코드를 구현해라.

(개발 시 유효성 체크를 할 때 보통 자바스크립트 파일로 설정한다.)

param.js

아이디, 나이는 반드시 입력되어야 하고 나이는 수치 데이터만 입력가능하도록 유효성을 체크하는 자바스크립트 파일

param.jsp

param.js 파일을 포함시켜 아이디, 나이에 데이터가 잘 입력되었는지 점검하여 서블릿으로 입력된 값을 받아 전송(html 폼 구조)

param.java

Html 문서의 입력 양식에 입력한 내용을 처리하는 서블릿 클래스


- jsp

<form name="form" action="param" method="post">
아이디: <input name="id"><br>
나이: <input name="age"><br>
번호: <input name="num"><br>
<input type="submit" value="전송" onclick="return on()">
</form>
<script type="text/javascript">

function on(){
	var a=document.getElementsByName("id");
    var b=document.getElementsByName("age");
    
    /* document.form.id.value=="" 이렇게도 가능*/
	if(a[0].value==""||b[0].value==""){
    	alert("이름과 나이는 필수항목");
    	return false;
	}return true;
    
}
</script>



- 서블릿

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html; setchar=UTF-8");
		String name=request.getParameter("name");
		String age=request.getParameter("age");
		String num=request.getParameter("num");
		PrintWriter out=response.getWriter();
		
		out.print("<html><body>");
		out.print("name: "+name+"<br>");
		out.print("age: "+age+"<br>");
		out.print("num: "+num+"<br>");
		out.print("</body></html>");
	}


-----------------------------

param 테이블

create table param(id varchar2(20),
age number);


** 디비로 값 입력
- param.jsp

<form name="form" action="param2.jsp" method="post">
아이디: <input name="id"><br>
나이: <input name="age"><br>
<input type="submit" value="전송" onclick="return on()">
</form>
<script type="text/javascript">

function on(){
	var a=document.getElementsByName("id");
    var b=document.getElementsByName("age");
    
    /* document.form.id.value=="" 이렇게도 가능*/
	if(a[0].value==""||b[0].value==""){
    	alert("이름과 나이는 필수항목");
    	return false;
	}else if(isNaN(b[0].value)){
       alert("나이는 숫자로 입력");
       return false;
    }
    return true;
    
}
</script>



- param2.jsp

<%
Class.forName("oracle.jdbc.driver.OracleDriver");
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/xe","sys as sysdba","djaak5685");
PreparedStatement pstm=con.prepareStatement("insert into param values(?,?)");
pstm.setString(1,request.getParameter("id"));
pstm.setInt(2,Integer.parseInt(request.getParameter("age")));
pstm.executeUpdate();

pstm.close();
con.close();

out.print("등록완료");
%>

-----------------------------

** jsp VS Servlet
- 둘 다 자바기반 웹 프로그래밍
- jsp 는 페이지 요청이 있을 때 최초에 한번 자바 코드로 변환된 후 서블릿 클래스로 컴파일 된다.

서블릿: 동적처리(뷰, 로직사이 제어)
jsp: 정적처리(뷰 view)

-----------------------------

** 커넥션풀

- MemberDAO

public class MemberDAO { 
	
 	//String id="sys as sysdba";
	//String pw="djaak5685";
	//String url="jdbc:oracle:thin:@localhost:1521/xe";
	
	Connection con; // 디비에 접근하는 객체
	PreparedStatement pstm; // 쿼리실행(조작)하는 객체
	ResultSet rs; // 결과 리턴받아 자바에 저장하는 객체
	
	public void getCon() { // 디비 연결함수
		try{
			
			
			
			//Class.forName("oracle.jdbc.driver.OracleDriver");
			//con=DriverManager.getConnection(url,id,pw);
			
			Context initctx=new InitialContext();
			// 외부에서 (server.xml) 데이터 읽어들여야 함.
			Context envctx=(Context) initctx.lookup("java:comp/env");
			// lookup 다운캐스팅.
			//톰캣서버에 정보를 담아 놓은 곳으로 이동
			
			DataSource ds=(DataSource) envctx.lookup("jdbc/pool");
			// 데이터 소스 객체 선언
			con=ds.getConnection();
			// 데이터 소스를 기준으로 연결
			
			System.out.println("디비접속 성공");
		}catch(Exception e){
			System.out.println("디비접속에러");
		}
	}
}


******

- 왼쪽 Servers
아래 tomcat-> server.xml 에 작업필요

      <Context docBase="Webbbb" path="/Webbbb" reloadable="true" source="org.eclipse.jst.jee.server:Webbbb">
     
      <Resource name="jdbc/pool" 
      auth="Container" 
      type="javax.sql.DataSource"
      driverClassName=
      "oracle.jdbc.driver.OracleDriver"
      maxWait="5000"
      username="sys as sysdba"
      password="djaak5685"
      url="jdbc:oracle:thin:@localhost:1521/xe"/>
      </Context>
      
      <Context docBase="Hellooo" path="/Hellooo" reloadable="true" source="org.eclipse.jst.jee.server:Hellooo">
      <Resource name="jdbc/pool" 
      auth="Container" 
      type="javax.sql.DataSource"
      driverClassName=
      "oracle.jdbc.driver.OracleDriver"
      maxWait="5000"
      username="sys as sysdba"
      password="djaak5685"
      url="jdbc:oracle:thin:@localhost:1521/xe"/>
      </Context>


------------------

* 쿠키: 웹 사이트에 접속할 때 생성되는 임시파일

* 쿠키 목적: 사이트에 접속한 사용자의 정보유지, 사용자들이 해당 사이트에 쉽게 접속하기 위해(자동로그인)

* 쿠키는 쿠키를 생성한 서버에만 전송됨

------------------------


- CookieLoginForm.jsp

<center>
<h1>쿠키</h1>
<form action="CookieLoginProc.jsp" method="post" name="f">
<table border="1">
<tr width="200">
<td width="70">아이디</td><td width="130"><input name="id"></td>
</tr>
<tr>
<td width="70">패스워드</td><td width="130"><input name="pw"></td>
</tr>
<tr width="200" >
<td width="200" align="center" colspan=2><input type="checkbox" name="save">아이디저장</td>
</tr>
<tr width="200" >
<td width="200" align="center" colspan=2><input type="submit" value="로그인"></td>
</tr>
</table>
</form>
</center>



- CookieLoginProc.jsp

<%
request.setCharacterEncoding("euc-kr");

String save=request.getParameter("save");
String id=request.getParameter("id");

if(save!=null){ // 아이디저장버튼이 체크되었다면
	Cookie co=new Cookie("id",id); 
	// 1번째 string-> 키값
	// 2번째 -> value
	
	co.setMaxAge(60*5); // 3000 은 3분
	// 3분간 유효하다. 최대 유지시간
	// 3분 지나면 id값 지워짐
	
	response.addCookie(co);
	// 사용자에게 쿠키값 넘겨줌
	out.write("쿠키 생성완료");
	
}
%>

----------------------------




 <script>
        function on(){
            var a=document.getElementById("pass");
            
            if()
        }
    </script>
------------
<section class="sol_center">
    <h1>나의 정보</h1>    
    <table width= "550">
        <tr width="100"><td>
            이   름 : <br>
        </td><td width="150">
         <input type="text" size="50" value="안효준" disabled><br>
        </td></tr>

        <tr><td >
            이&nbsp; 메&nbsp; 일 :
        </td><td width="150">
         <input type="email" size="50" value="asdasd123@naver.com"><br>
        </td></tr>

        <tr><td>
            주소 :
        </td><td width="150">
         <input type="text" size="50" value="서울특별시 종로구 종로12길 15,5층(관철동 13-13)"><br>
        </td></tr>

        <tr><td>
            전화번호 :
        </td><td>
         <input type="tel" size="50" value="010-0000-0000"><br>
        </td></tr>

        <tr><td>
            비밀번호 :
        </td><td>
         <input id="pass" type="password" size="50" ><br>
        </td></tr>

         <tr><td colspan="2"><input type="button" value="수정" onclick="on()"></td><td></td>
         <td colspan="2"><input type="reset" value="취소"></td><td></td></tr>

http : 클라이언트가 요청하면 서버가 응답. 응답하면 종료됨.
쿠키/세션 -> 갖고 있으면 종료되지 않고 데이터 저장.
쿠키는 브라우저에 저장/ 세션은 서버에 저장.

-------------------
** 쿠키

- cookie1.jsp

<%
//서버가 보낸 데이터가 클라이언트 폴더에 저장됨

// 1. 쿠키생성 ( id: 키값, pink: value)
Cookie co=new Cookie("id","pink"); 

// 2. 유효기간 설정(연,월,시간,초)
co.setMaxAge(365*24*60*60);

// 3. 클라이언트한테 쿠키 전송
response.addCookie(co);

// 4. 쿠키를 생성하여 클라이언트에게 전송
response.addCookie(new Cookie("pw","1234"));
response.addCookie(new Cookie("age","12"));


%>
<h2>쿠키 설정</h2>



- cookie2.jsp

<h2>클라이언트로부터 얻어온 쿠키들</h2>
<%

Cookie[]c=request.getCookies();
for(Cookie co: c){
	out.print(co.getName()+" : "+co.getValue());
}

%>



쿠키1,2 둘다 돌려보면 쿠키2 에 값이 출력됨

- cookie3.jsp // 쿠키 삭제 페이지

<%
Cookie c=new Cookie("id","");
c.setMaxAge(0); //쿠키 유효시간 만료시킴
// 아이디값 삭제됨
response.addCookie(c);

%>
<h3>쿠키가 삭제됨</h3>
<a href="cookie2.jsp">쿠키 삭제 확인</a>
---------------------

** 세션
jsp(서버)에서만 접근 가능하므로 보안 유지가 강력하다.
저장할 수 있는 데이터에 한계가 없다.


- session1.jsp

<%
// 세션에 값 설정
// 상태 유지 위해서는 값을 저장한 후 이를 가져와서 사용한다.
session.setAttribute("id","pink");
session.setAttribute("pw","1234");

%>
<h2>세션값설정</h2>

- session2.jsp

<h3>세션 값 얻기</h3>
<%
String id=(String)session.getAttribute("id");
String pw=(String)session.getAttribute("pw");
// 반환형이 object형 이므로 다운캐스팅
out.print(id+" "+pw);
%>



// 세션의 유지시간 설정. 분단위- 60분(따로 설정 안하면 디폴트 30분)
session.setMaxInactiveInterval(60);

------------------------

** Enumeration : 열거형

-> session 객체로 getAttributeNames() 를 호출하면 세션에 저장된 항목들의 이름을 가져옴.
-> 이때 반환형이 Enumberation형


------------

** 세션 연습

- loginform.jsp

<center>
<h1>쎄션</h1>
<form action="loginproc.jsp" method="post" name="f">
<table border="1">
<tr width="200">
<td width="70">아이디</td>
<td width="130"><input name="id"></td>
</tr>
<tr>
<td width="70">패스워드</td>
<td width="130"><input name="pw"></td>
</tr>
<tr width="200" >
<td width="200" align="center" colspan=2>
<input type="submit" value="로그인"></td>
</tr>
</table>
</form>
</center>


********** 

- loginproc.jsp

<%
request.setCharacterEncoding("euc-kr");
String id=request.getParameter("id");
String pw=request.getParameter("pw");

session.setAttribute("id",id);
session.setAttribute("pw",pw);

// 세션의 유지시간 설정. 분단위- 60분(따로 설정 안하면 디폴트 30분)
session.setMaxInactiveInterval(60);

%>

당신의 아이디는<%=id %>이다.
<a href="loginproc2.jsp">다음페이지로이동</a>


********** 

- loginproc2.jsp

<h2>로그인 처리</h2>
<%
String id=(String)session.getAttribute("id");
String pw=(String)session.getAttribute("pw");

%>
<%="아이디는 "+id+"<br>"+"비번은 "+pw %>

---------------------------------

loginform : 로그인 폼
loginproc : 회원 인증 페이지 (id, pw 입력 받아서 if문으로 둘 다 일치하면 세션에 이름 저장)


- 1. 로그인폼

<% request.setCharacterEncoding("euc-kr"); %>
<form action="loginproc.jsp" method="post">
<label for="userid">아이디: </label>
<input name="id" id="userid"><br>
<label for="userpw">암호: </label>
<input name="pw" id="userpw"><br>
<input type="submit" value="로그인">
</form>


- 2. 로그인프로시저

<%
request.setCharacterEncoding("euc-kr");

String id="ddd";
String pw="aaa";
String name="ji";

if(id.equals(request.getParameter("id"))&&
		pw.equals(request.getParameter("pw"))){
	session.setAttribute("name",name);
	response.sendRedirect("loginproc2.jsp");
}else{ %>
<script type="text/javascript">
alert("아이디 또는 비번 확인");
location.href="loginform.jsp";
</script>
<% } %>


- 3. 로그인프로시저2

<%
// name값 얻어와 name이 null이면 로그인 폼으로 이동
String name=(String)session.getAttribute("name");
if(name==null){
	response.sendRedirect("loginform.jsp");
}else{ %>
	<%=name %>님 안녕
	<form action="logout.jsp" method="post">
	<input type="submit" value="로그아웃">
	</form>
<% } %>



- 4. 로그아웃

<%
session.invalidate(); // 무효화하는 함수
%>

<script type="text/javascript">
alert("로그아웃");
location.href="loginform.jsp";
</script>



--------------------------------

** 자바스크립트

새 윈도우가(500,300)에 출력되게 해라
- 새 윈도우의 타이틀은
"안녕", 배경색은 yellow

- body : 안녕하세요 스크립트입니다


    <script>
        var a=window.open('','_blank','width=500, height=300');
        a.document.title="안녕";
        a.document.body.style.backgroundColor="yellow";
        a.document.body.innerHTML="안녕하세요 스크립트입니다.";

    </script>

---------------------------

** 셀렉트 옵션 선택시 해당 페이지 이동
(onchange 활용)


    <select onchange="ch(this)">
        <option value="http://www.goole.com">구글</option>
        <option value="http://www.naver.com">네이버</option>
    </select>
    <script>
        function ch(a){
            location.href=a.value;
        }
    </script>



-----------------------


출력 안됨

<!DOCTYPE html>
<html>
    <head>
        <script>
            function func(){
                var r=eval("12+3+4+5");
                document.write(r);
            }
        </script>
    </head>
    <body>
        func();

    </body>
</html>


--------------

<!DOCTYPE html>
<html>
    <head>
        <script>
            var n=prompt("0보다 큰 정수를 입력");
            n=Math.floor(n);
            var sum=0;
            for(var i=0;i<=n;i++){
                sum+=i;
            }
            document.write(sum);
        </script>
    </head>
    <body>
      

    </body>
</html>

---------

<!DOCTYPE html>
<html>
    <head>
        <script>
            var today=new Date();
            var n=new String("hi");

            document.write(today.toLocaleString()+"<br>");
            document.write(n.length);
            
        </script>
    </head>
    <body>
      

    </body>
</html>

-------

배열 만들기
<!DOCTYPE html>
<html>
    <head>
        <script>
           var p=[5,7,2,8,9];

           for(var i=p.length;i>=0;i--){
               document.write(p[i]);
           }

           var n=new Array(5); // 크기가 5인 배열 생성(초기화x)
           var nn=new Array(1,2,3); // 값 초기화

        </script>
    </head>
    <body>
      

    </body>
</html>

--------

<!DOCTYPE html>
<html>
    <head>
        <script>
           var n=new Date();
           var a=n.getDate();
           var b=n.getHours();
           var c=n.getFullYear();
           document.write(a+" "+b+" "+c);
        </script>
    </head>
    <body>
      

    </body>
</html>

------

코어객체 4가지 기억


+---------

문자열 비교 알파벳 처음거 출력

        <script>
            var names=new Array("sujung","jihye","jun");
            document.write("이름: "+"<br>");
            var p=names[0];
            for(var i=0;i<names.length;i++){
                if(names[i]<p){
                    p=names[i];
                }
            }
                document.write(p);
           
          </script>


names.sort();
--------

객체 생성 세가지

            var n=new Object();
            n.names="승철";
            n.age=40;
            n.id=12344;


            var a={
                names:"준호",
                age: 44,
                id: 123
            };

            function b(){
                this.names="호준";
                this.age=42;
                this.id=55;
            }
            

-----------

dom, bom객체: html 속성 제어하기 위해

--------

온클릭 연습

        <p id="f" style="color: yellow;" onclick="this.style.color='red'">
        아아
        </p>


-----

이너html 연습

<!DOCTYPE html>
<html>
    <head>
        <script>

        </script>
    </head>
    <body>
        <p id="f" style="color: yellow;" onclick="this.style.color='red'">
        </p>
        <span>나를 클릭해</span>
        <script>
            var a=document.getElementById("f");
            a.innerHTML="클릭";
        </script>
    </body>
</html>

----------

** 객체 값 출력시 이렇게 가능(인덱스 안에 키값)
        <script>
            var n={
                이름:"용석",
                나이:23,
                주소:"서울"
            };
            document.write(n["이름"]);
        </script>


----------

documents 객체 노드 생성 메소드
1. 텍스트 노드를 갖고 있을 때
1) createElement(tagName) : 요소 노드생성
2) createTextNode(text): 텍스트 노드 생성
3) appendChild(node) : 요소노드에 텍스트 노드 연결

2. 텍스트 노드가 없을 때
1) setAttribute(name, value): 객체의 속성 지정
2) getAttribute(name): 객체의 속성 가져옴

3. innerHTML 속성 사용하는 방법

--------

** 1. 텍스트 노드를 갖고 있을 때 크리에잇+어펜드차일드 연습
appendChild : 객체에 노드를 연결

        <script>
            window.onload=function(){
            var r=document.createElement('h1');
            var t=document.createTextNode("DOM");

            r.appendChild(t);
            document.body.appendChild(r);
            
            }
        </script>

----------

** 2. 텍스트 노드가 없을 때(이미지)


<!DOCTYPE html>
<html>
    <head>
        <script>

        </script>
    </head>
    <body>
        <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\알라딘포스터1.jpg"
        width="300" height="250">
        <script>
            window.onload=function(){
                var i=document.createElement('img');
                i.setAttribute('src','C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/둘리1.jpg');
                i.setAttribute('width',400);
                i.setAttribute('height',350);
                document.body.appendChild(i);
          }
        </script>
    </body>
</html>

----------

** 3. innerHTML 속성 사용하는 방법

        <script>
            window.onload=function(){
                var n='';
                n+-'<ul>';
                n+='<li>자바</li>';
                n+='<li>스크립트</li>';
                n+='<li>제이쿼리</li>';
                n+-'</ul>';

                document.body.innerHTML=n;
            }
        </script>


-------

** getElementsByTagName 
=> 배열형태.

        <script>
            window.onload=function(){
                var a=document.getElementsByTagName("h1");
                a[0].innerHTML="자바";
// h1의 첫번째 값 변경
            }
        </script>


-------

** 문서 객체 가져오기

1. querySelector(선택자)
: 선택자로 가장 처음 선택되는 문서 객체 가져옴

2. querySelectorAll(선택자)  // 배열
: 선택자를 통해 선택되는 문서 객체를 배열 형태로 모두 가져옴


--------

** querySelector 연습

<!DOCTYPE html>
<html>
    <head>
        <script>
            window.onload=function(){
                var n=document.querySelector('#head1');
                var n1=document.querySelector('#head2');
            }
        </script>
    </head>
    <body>
        <h1 id="head1">유강</h1>
        <h1 id="head2">승엽</h1>
        
    </body>
</html>

----------

1. <p></p>태그로 “무슨 언어 배울거에요? 라고 출력한 후 출력된 문자열을 클릭하면 prompt() 에 배우고 싶은 언어를 입력한다. 그 입력한 문자열을 웹 페이지에 출력해라.


<!DOCTYPE html>
<html>
    <head>
        <script>
           var p=document.getElementsByTagName("p");
            function cl(){
                var a=prompt("언어입력");
                for(var i in p){
                    p[i].innerHTML=a;
                }
            }

        </script>
    </head>
    <body>
        <p onclick="cl()">무슨 언어 배울거?</p>
    </body>
</html>

----------

2. Prompt()를 반복적으로 호출하여 5개의 정수를 입력받아 배열에 저장하고 입력한 반대로 출력하는 웹 페이지를 작성해라.



<!DOCTYPE html>
<html>
    <head>
        <script>
            var a=new Array(5);
            for(var i=0;i<5;i++){
              a[i]=prompt("정수입력");
              
            }
            for(var i=4;i>=0;i--){
                document.write(a[i]);
            }
        </script>
    </head>
    <body>
    </body>
</html>

------

** 키 이벤트

onkeydown : 키 눌렀을때

onkeypress : enter, space, esc 등 키 이벤트(키 뗐을때)

onkeyup

onreset
onsubmit

-------

** 키 이벤트 연습

<!DOCTYPE html>
<html>
    <head>
        <script>
            function kk(e){
                var n=document.getElementById("dd");
                var m="";
                m+=e.key+"<br>"; // 누른 키 이름
                m+=e.code+"<br>"; // 키 코드
                n.innerHTML=m;
            }
        </script>
    </head>
    <body>
        <input type="text" id="t" onkeydown="kk(event)">
        <div id="dd" style="background-color: aqua;">
        
        </div>
    </body>
</html>


---------

배경색이 있는 부분을 클릭하면 promp()함수를 출력하고

prompt()에 문자열을 입력하면순서대로 브라우저에 출력된다.



<!DOCTYPE html>
<html>
    <head>
        <script>
            function cl(){
                var a=prompt("입력");
                var b=document.createElement("li");
                var c=document.createTextNode(a);
                b.appendChild(c);
                var d=document.getElementsByTagName("ol");
                for(var i in d){
                    d[i].appendChild(b);
                }
            }
        </script>
    </head>
    <body>
       <ol type="a" style="background-color: aqua;">
        <li onclick="cl()">7시에 일어난다.</li>
    </ol> 
    </body>
</html>

-------

새 윈도우를 (500,500)으로 출력

새 윈도우의 타이틀을 "자바"로 배경색을 좋아하는 색으로 출력


<!DOCTYPE html>
<html>
<head>
<script>
function on(){
var n=window.open("","_blank","width=500, height=500");
n.document.write("자바");
n.document.body.style.backgroundColor="red";
}
</script>
</head>
<body onload="on()">
<p>자바자바스크립트</p>
</body>
</html>

---

위에거 응용 위치지정 띄우기 top, left 이용, 타이틀도 

<!DOCTYPE html>
<html>
<head>
<script>
function on(){
var n=window.open("","_blank",
"width=500, height=500,top=10, left=600");
n.document.write("자바");
n.document.title="java";
}
</script>
</head>
<body onload="on()">
<p>자바자바스크립트</p>
</body>
</html>


------

계산식을 입력받아 결과를 출력하는 웹 페이지를 작성해라. 식을 입력한 후 enter키를 치면 수식이 계산되면서 결과를 출력한다. (계산식과 값 부분은 input type=text형태로, querySelector사용 enter -> keyCode: 13)

내가짠거

<!DOCTYPE html>
<html>
<head>
    <script>
        function k(e){
        e.keyCode=13;
        var a=document.querySelector("#aa");
        var b=document.querySelector("#bb");
        b.value=eval(a.value);

        }
    </script>
</head>
<body>
    수식: <input type="text" id="aa" onkeypress="k(event)"><br>
    값: <input type="text" id="bb">
</body>
</html>

선생님거

<!DOCTYPE html>
<html>
<head>
    <script>
        function k(e){
            if(e.keyCode==13){

        var n=eval(document.querySelector("#aa").value);
        document.querySelector("#bb").value=n;
            }
        }
    </script>
</head>
<body>
    수식: <input type="text" id="aa" onkeypress="k(event)"><br>
    값: <input type="text" id="bb">
</body>
</html>

------

브라우저 내 아무 곳이나 클릭하면(포커스를 가지고 있는 상태- onfocus()) 배경색이 하얀색, 브라우저 바깥의 아무 곳이나 클릭하면(포커스를 잃게 되는 경우- onblur()) 배경색이 red색을 바뀌는 웹 페이지를 작성해라.

<!DOCTYPE html>
<html>
<head>
    <script>
       function fo(){
           document.body.style.background="white";
       } 
       function bl(){
           document.body.style.background="red";
       }
    </script>
</head>
<body onfocus="fo()" onblur="bl()">
   
</body>
</html>

--------

** 제이쿼리

        $(document).ready(function(){
         // 문서가 준비되면 매개변수로 
         //넣은 콜백 함수를 실행 하라는 뜻   
        })

----------------

1. 기본선택자

$('선택자').css('메소드')

1-1) 전체선택자
1-2) 태그선택자
1-3) 아이디선택자
1-4) 클래스 선택자
1-5) 자손, 후손 선택자

<body>
    <h2 id="a">자바</h2>
    <p>스크립트</p>
    <h2 class="a">html</h2>
    <script>
        $(document).ready(function(){
            $("p").css("color","red");
            $("#a").css("color","blue");
            $(".a").css("color","aqua");
        })
    </script>
</body>

2. 속성선택자
$("input [type='text']").css("color","red");

3. 필터선택자( : 기호를 포함하는 선택자)
요소: checked (체크여부확인)
요소: disabled (활성화여부)
요소: input
요소: selected

3-1.위치선택자(짝수, 홀수)

4. 배열관리
jQuery로 배열을 관리 할 수 있다.
이때는 each() 매소드를 사용

4-1) $.each(object, function(index, item){})
4-2) $(selector).each(function(index,item){})

jQuery 배열 객체는 선택자로 여러개의 문서객체를 선택할때 생성됨

***addClass : 문서 객체에 클래스 속성을 추가하는 메소드
$(document).ready(function(){
         $('h1').addClass('aa');
     });

***removeClass : 문서 객체에 클래스 속성 제거하는 메소드


------------------

* 요소: checked (체크여부확인) 연습

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <select >
        <option value="치킨">치킨</option>
        <option value="피자">피자</option>
        <option value="감자">감자</option>
        <option value="과자">과자</option>
    </select>
    <script>
        $(document).ready(function(){
            setTimeout(function(){
                var n=$('select > option:selected').val();
                alert(n);
            }, 3000); 
        // 선택된 값 3초 뒤에 띄움
        });
    </script>
</body>
</html>

--------

** 4-1) $.each 연습

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    
    <script>
     $(document).ready(function(){
         var ary=[{name:"kim",link:"http://www.naver.com"},
         {name:'lee',link:'http://www.daum.net'}];
     
     $.each(ary,function(index,item){
         var n='';
         n+='<a href="'+item.link+'">'
         n+='<h2>'+item.name+'</h2>';
         n+="</a>";
         document.body.innerHTML+=n;
     });
    });
    </script>
</body>
</html>

------

** addClass + each 이용
배열 특정 값 컬러 변경

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>

    <style>
        .aa0{
            color: red;
        }
        .aa1{
            color: blue;
        }
    </style>
</head>
<body>
    <h1>one</h1>
    <h1>two</h1>
    <h1>three</h1>
    <script>
     $(document).ready(function(){
         $('h1').addClass('aa');
     });
     $(document).ready(function(){
         $('h1').each(function(index,item){
             $(item).addClass('aa'+index);
         })
     });
    </script>
</body>
</html>

--------

** 겍체 확장 : $.extend()


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>

    <style>
        
    </style>
</head>
<body>
    
    <script>
     $(document).ready(function(){
         var n={name:'juli'};
        
         $.extend(n,{
             adr:"서울",
             job:"it"
         });

        var m='';
        $.each(n,function(key,item){
            m+=key+" "+item+'\n';
        });
        alert(m);
    });
    </script>
</body>
</html>

** 이벤트 타겟 연습

<!DOCTYPE html>
<html>
<head>
    <script>
       function on(e){
// 이벤트가 어디서 발생했는지        
var n=e.target+"<br>";
        
        var m=document.getElementById("pp");
        m.innerHTML=n;
       }
    </script>
</head>
<body >
   <p id="pp">버튼 클릭</p>
   <button onclick="on(event)">클릭</button>

</body>
</html>

-------

1. 
답: 1번

2. 웹 페이지를 접속할 때, 월~수요일이면 배경색을 green, 목~금요일이면 blue로 출력해라. (Date객체의 getDay() 활용, 일요일=0. 월요일=1, …토요일=6이다)

    <script>
        window.onload=function(){
            var a=new Date();
        if(a.getDay()==1||a.getDay()==2||a.getDay==3){
            document.body.style.backgroundColor="green";
        }else{
            document.body.style.backgroundColor="blue";
        }
        }
    </script>


-----

** onload

Window.onload=function(){
// 자바스크립트 코드
};

=> 문서가 모두 로드 된 이후에 코드가 실행되도록 설정

=>제이쿼리에선 레디함수와 동일
$(document).ready(function(){ });


------------

3. 브라우저가 HTML DOM트리를 만드는 이유는 무엇인가?

html 속성 제어하기 위해
 

4. 이미지를 하나 가져와 이미지 위에 마우스 휠을 위로 굴리면 이미지가 10%로 축소되고 아래로 굴리면 10%씩 확대되는 웹 페이지를 작성해라.

<!DOCTYPE html>
<html>
<head>
    <script>
        function on(e,a){
        

        if(e.wheelDelta>0){
            a.width+=a.width*0.1;
        }else{
            a.width-=a.width*0.1;
        }
        }
    </script>
</head>
<body >
   <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\둘리1.jpg"
   width="300" height="250" onwheel="on(event, this)">

</body>
</html>

----------

** bom 연습(브라우저 열기연습)

<!DOCTYPE html>
<html>
<head>
    <script>
        var n=window.open('','_blank','width=250, height=150');
        n.moveTo(0,0);
// 0.0 부터 1초마다 10.10씩 이동
        setInterval(function(){
            n.moveBy(10,10);
            }, 1000);
    </script>
</head>
<body >
   
</body>
</html>

-----------

5. “이벤트” 부분을 클릭했을 때 경고창에 “st+이벤트” 를 출력해라.       

   <body>

   <p id=”p”> 다음 여기서

   <strong id=”st”> 이벤트 </strong> 를 출력해라. </p></body>

 
<!DOCTYPE html>
<html>
<head>
    <script>
        function on(e){
            var a=e.target;
            var b=document.getElementById("st");
            alert(b.tagName+" "+a.innerHTML+" "+b.id);
        }
    </script>
</head>
<body >
    <p id="p"> 다음 여기서
        <strong id="st" onclick="on(event)"> 이벤트 </strong>
        를 출력해라. </p>
</body>
</html>



6. 다음 웹 페이지가 로드될 때, “thank you”라는 문자열이 있는 150*100 크기의 새 윈도우를 출력해라.



<!DOCTYPE html>
<html>
<head>
    <script>
        var a= window.open("","_blank","width=150,height=100");
        a.document.write("thank you");

    </script>
</head>
<body >
<p>자바스크립트를 배워보자</p>
</body>
</html>
​
***

이렇게도 가능


<!DOCTYPE html>
<html>
<head>
    
</head>
<body >
    <p id="p"> 다음 여기서
        <strong id="st" onclick="on(event)"> 이벤트 </strong>
        를 출력해라. </p>
    <script>
        

       var n=document.getElementById("st");
        n.addEventListener("click", function(e){
            alert(n.tagName+" "+e.target.innerHTML);
        })
       
    </script>
</body>
</html>


---------

// 윈도우 로드시 h1 아이디 알아내서 클릭시 이벤트가 발생한 객체를 출력
alert로  object HTMLHeadingElement 출력

    <script>
       window.onload=function(){
           var a=document.getElementById("head");
           a.addEventListener("click",function(){
               alert(this);
           })
       }
    </script>

***

글자색+ 배경 변경시

<!DOCTYPE html>
<html>
<head>
    
</head>
<body >
    <h1 id="head">Click</h1>

    <script>
       window.onload=function(){
           var a=document.getElementById("head");
           a.addEventListener("click",function(){
               a.style.color="orange";
               document.body.style.backgroundColor="yellow";
           })
       }
    </script>
</body>
</html>


-------

워드 문제 1번
5*3 / 텍스트창
1+2*3 / 텍스트창
12*2 / 텍스트창
결과버튼 / 갯수

왼쪽 문제의 답을 오른쪽 창에 입력 후 결과 누를때 답이 아니면 왼쪽에 취소선 그어지고, 정답인 갯수가 결과버튼 옆에 표시되게 만들어라


<!DOCTYPE html>
<html>
<head>
</head>
<body >
    <table>
        <tr><td class="qq">5*3</td>
        <td><input type="text" class="aa"></td>      
        </tr>
        <tr><td class="qq">1+2*3</td>
        <td><input type="text" class="aa"></td>      
        </tr>
        <tr><td class="qq">12*2</td>
        <td><input type="text" class="aa"></td>      
        </tr>
        <tr>
        <td><button onclick="on()">결과</button></td>
        <td><span id="grade">0</span></td>
        </tr>
    </table>
    <script>
       function on(){
           var q=document.getElementsByClassName("qq");
           var a=document.getElementsByClassName("aa");
           var count=0;
           var g=document.getElementById("grade");
           for(var i=0;i<q.length;i++){
               var n=q[i].innerHTML;
               var m=eval(n);
               var answer=a[i].value;
               
               if(parseInt(answer)==m){
                count++;
               }else{
                q[i].style.textDecoration="line-through"
               }
               g.innerHTML=count;
           }

                
       }
    </script>
</body>
</html>


-----------

비번확인 연습

<!DOCTYPE html>
<html>
<head>
</head>
<body >
    <form id="mm">
        비번 <input type="password" name="pa" id="p"><br>
        비번확인 <input type="pssword" name="pa-ch" id="pa"><br>
        <input type="submit" value="제출">
    </form>
    <script>
      window.onload=function(){
          document.getElementById("mm").onsubmit=function(){
              // onsubmit : submit 버튼 클릭시
              var n=document.getElementById("p").value;
              var m=document.getElementById("pa").value;
              if(n==m){
                  alert("성공");
              }else{
                  alert("다시입력");
                  return false;
              }
          }
      }
    </script>
</body>
</html>

-----------

// 함수를 준 후 스크립트에서 노드 생성하고 문자열 클릭하면 


<!DOCTYPE html>
<html>
<head>
</head>
<body>
    <p>안녕, 나는 학생이다.</p>
    <script>
        var b=document.getElementsByTagName("p");
        b[0].onclick=function(){
         var a=document.createTextNode("p");
         document.body.appendChild(a);
        }
      
    </script>
</body>
</html>


-------------------

** 제이쿼리

     $(document).ready(function(){
        alert("안녕");
     })

// 이렇게도 가능
     $(function(){
         alert("하이");
     })

------------------

제이쿼리 지원하지 않는 필터를 선택해야될때 
1. 기본 필터 메소드
1-1) $.(selector).filter(selector);
1-2) $.(selector).filter(function(){ });

2. 특정 위치의 문서 객체 선택방법
2-1) eq() // 매개변수에 숫자(양수는 앞에서, 음수는 뒤에서부터)

2-2) first() // 첫번째
2-3) last() // 마지막

3. 문서 객체 특징 판별하기
is()

4. 문서 객체 속성확인
교재 p220 
attr()

--------

// 필터 선택 연습
// 짝수(0부터시작, even)만 스타일 적용
// 홀수는 odd

<body>
    <h2>준호</h2>
    <h2>윤혁</h2>
    <h2>승엽</h2>
    <script>
     $(document).ready(function(){
    //    $('h2').filter(':even').css({
    //        backgroundColor:'black',
    //        color:'yellow'
    //    });
// 둘 다 같은 방법
    $('h2:even').css({
           backgroundColor:'black',
           color:'yellow'
       });
     });

    </script>
</body>

=> 이렇게도 가능

<body>
    <h2>준호</h2>
    <h2>윤혁</h2>
    <h2>승엽</h2>
    <script>
     $(document).ready(function(){
       $('h2').filter(function(index){
           return index%2==0}).css({
               background:'black',
               color:'yellow'
           })
     });

    </script>
</body>

-----
=> 이렇게도 가능

    $(document).ready(function(){

                $('h2').css('background','black').filter(':odd').css('color','yellow');

            })

-------

=> eq() 이용

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <h2>준호</h2>
    <h2>윤혁</h2>
    <h2>승엽</h2>
    <script>
     $(document).ready(function(){
         $('h2').eq(0).css('background','orange');
     })
    </script>
</body>
</html>

----------

=> eq() 에 속성 추가
// add 이용하여 위치속성 주기
// eq() 괄호 안에 인덱스

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <h2>준호</h2>
    <h2>윤혁</h2>
    <h2>승엽</h2>
    <script>
     $(document).ready(function(){
         $('h2').eq(0).css('background','orange').add('h2').css('float','left');
     })
    </script>
</body>
</html>


-------

// is() 활용
// 보통 if문과 같이 활용.
// aa클래스이면 배경 오렌지색으로 변경

<body>
    <h2 class="aa">준호</h2>
    <h2>윤혁</h2>
    <h2 class="aa">승엽</h2>
    <script>
     $(document).ready(function(){
         $('h2').each(function(){
             if($(this).is('.aa')){
                 $(this).css('background','orange');
             }
         })
     })
    </script>
</body>

-------

** 태그에 클래스 속성 넣어주기
addClass

<body>
    <h1>자바</h1>
    <h1>스크립트</h1>
    <h1>재밌다</h1>
    <script>
     $(document).ready(function(){
         $('h1').addClass('java');
     })
    </script>
</body>

-------


** 클래스 삭제(removeClass)

<body>
    <h1>자바</h1>
    <h1 class="jj">스크립트</h1>
    <h1>재밌다</h1>
    <script>
     $(document).ready(function(){
         $('h1').removeClass('jj');
     })
    </script>
</body>

-----

1. 옵션을 선택할 때마다 윈도우를 열어 사이트에 접속하는 웹 페이지 작성해라.

// 5초 뒤에 선택된 사이트 이동

<body>
    <select>
        <option value="http://www.naver.com">네이버</option>
        <option value="http://www.daum.net">다음</option>
    </select>
    <script>
     $(document).ready(function(){
        setTimeout(function(){
         var a=$('select>option:selected').val();
         window.open(a,"_blank");
        },5000);
     });
    </script>
</body>
​

=> 버튼으로 이동시
<body>
    <select>
        <option value="http://www.naver.com">네이버</option>
        <option value="http://www.daum.net">다음</option>
    </select>
    <button onclick="on()">이동</button>
    <script>
     function on(){
        var a=document.getElementsByTagName("option");
        for(var i in a){
            if(a[i].selected==true){
                window.open(a[i].value,"_blank");
            }
        }
     }
    </script>
</body>

=>  onchange() 이용

<body>
    <select onchange="on()">
        <option value="http://www.naver.com">네이버</option>
        <option value="http://www.daum.net">다음</option>
    </select>
    <script>
     function on(){
        var a=document.getElementsByTagName("option");
        for(var i in a){
            if(a[i].selected==true){
                window.open(a[i].value,"_blank");
            }
        }
     }
    </script>
</body>

2. setTimeout(), clearTimeout() 을 사용하여 시계를 구현해라.
페이지가 로드되면 시계가 가기 시작.
현재 시작 값은 Date()객체로 얻기

<body>
    
    <script>
        window.onload=function(){
            setInterval(function(){
                var a=new Date();
                var b=setTimeout(function(){
                document.write(a.toLocaleTimeString());
            },0);
            setTimeout(function(){
                clearTimeout(b);
                document.body.innerHTML="";
            },1000);
            },1000);
        };
    </script>
</body>

---------

** attr 연습
// C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\둘리1.jpg 출력됨
=> 여러 문서객체 중 첫번째 값만 출력됨
=>

<body>
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\둘리1.jpg"
     alt="">
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\알라딘포스터1.jpg"
     alt="">
    <script>
     $(document).ready(function(){
         var n=$('img').attr('src');
         alert(n);
     })
    </script>
</body>


-------

1. 문서 객체의 속성 추가
1-1) 
$(selector).attr(name(속성이름), value);
1-2) 
$(selector).attr(name, function(index, attr){ } );
1-3)
$(selector).attr(object);

2. 문서 객체 속성 제거
removeAttr(name)

-------------

문서 객체의 속성 1-1 연습
// 높이, 너비 속성 추가됨
    <script>
     $(document).ready(function(){
         $('img').attr('width',200);
         $('img').attr('height',150);
     })
    </script>

------------

문서 객체의 속성 1-2 연습
// 인덱스 2번째거 너비 변경
    <script>
     $(document).ready(function(){
         $('img').attr('width',function(index){
            return (index+1)*200;
         });
         
     })
    </script>

--------

** css 함수
// 배열에 있는 값을 순서대로 적용
css(name, value)=> 밸류를 함수로 줄 수도 있음
    <script>
        var n=['red','orange','yellow'];
        $('h2').css("color",function(index){
            return n[index];
        });
    </script>

*******

이렇게도 가능
    <script>
        var n=['red','orange','yellow'];
        $('h2').css({
            color:function(index){
                return n[index];
            }
        });
    </script>

--------

** 하다 말음 내일 한다고 함
배열 값 추가:  push
    <script>
        var n=[];
        n.push({
            name:"tom",
            id:'123'
        })
        
    </script>

----------
** 배열 값 삽입

    <script>
        var n=[];
        n.push({
            name:"tom",
            id:'123'
        });
        n.push({
            name:"jack",
            id:'345'
        });

        
    </script>

------------


    <script>
        function fun(name, math, eng){
            var n={
                이름: name,
                수학: math,
                영어: eng,

                getSum: function(){
                    return this.수학+this.영어;
                },
                getAvg:function(){
                    return this.getSum()/2;
                },
                toString:function(){
                    return this.getSum()+" "+this.getAvg();
                }
            };
            return n;
        }
    </script>

-------

** 객체 배열 만들어서 출력

    <script>
        function fun(name, math, eng){
            var n={
                이름: name,
                수학: math,
                영어: eng,

                getSum: function(){
                    return this.수학+this.영어;
                },
                getAvg:function(){
                    return this.getSum()/2;
                },
                toString:function(){
                    return this.getSum()+" "+this.getAvg();
                }
            };
            return n;
        };

        var stu=[];
        stu.push(fun('유강',90,100));
        stu.push(fun('승철',80,90));
        var a="";
        a+=stu[0].toString()+"\n";
        a+=stu[1].toString();
        alert(a);
    </script>

-----

    <script>
       var stu={
           name:'수정',
           grade:'1학년',
           toString:function(){
               return this.name+" : "+this.grade;
           }
       };
       alert(stu);
    </script>

-----

1. body부분에 아래 문장을 적고  

p태그에 대해서만 <p>마우스</p>가 올라갈때 밑줄이 그어지고 <p>마우스</p> 내려갈때 밑줄이 사라진다.

<body>
    
    p태그에 대해서만 
    <p onmouseover="over()" onmouseout="out()">마우스</p>가 올라갈때 밑줄이 
    그어지고 <p onmouseover="over()" onmouseout="out()">마우스</p> 내려갈때 
    밑줄이 사라진다.
    <script>
        function over(){

           var a=document.getElementsByTagName("p");
               for(var i in a){
                   a[i].style.textDecoration="underline";
               }
        }
        function out(){
            var a=document.getElementsByTagName("p");
               for(var i in a){
                   a[i].style.textDecoration="none";
               }
        }
          
    </script>
</body>

****

이렇게도 가능


<script>
window.onmouseover = function(e) {
if(e.target.tagName.toLowerCase() != "p")
return;
else
e.target.style.textDecoration ="underline";
}
window.onmouseout = function(e) {
if(e.target.tagName.toLowerCase() != "p")
return;
else
e.target.style.textDecoration ="none";
}
</script>

----

        // 1초마다 함수실행
        // resizeBy(-10,10) -> 윈도우크기 상대적 지정
        // moveBy(20,20) -> 윈도우 위치 상대적 이동

    <script>
        var n=window.open("","","width=300, height=200");
        var x=screen.width; // 해상도
        var y=screen.height;

        n.moveTo(0,0) // 윈도우 위치를 절대적 이동
        n.resizeTo(x,y); // 윈도우 크기를 절대적으로 지정



         setInterval(function(){
            n.resizeBy(-10,-10);
            n.moveBy(20,20);
         },1000)

    </script>

----------

2. 다음 태그가 있을 때, <div>태그가 출력되는 영역에 “<span>hi</span>삽입하여 hi를 출력하고자 하는 코드를 작성해라. (appendChild 이용)

<div id=”my”></div>

​=>

<body>
    <div id="my"></div>
    <script>
        var a=document.getElementById("my");
        var b=document.createElement("span");
        var c=document.createTextNode("hi");
        b.appendChild(c);
        a.appendChild(b);
    </script>
</body>

-----------

** slice(a,b)
a부터 b 미만
안녕하세요 저는 =>slice(3,5) 
=> '세요'만 출력

------

** extend 해서 출력 연습

    <script>
        $(document).ready(function(){
            var n={
                이름:'경찬'
            };
            $.extend(n,{
                나이:20,
                toString:function(){
                    return this.이름+" "+this.나이;
                }
            });
        document.write(n);
        });
    </script>

------

** onmousemove 활용

3. img태그의 이미지 위에 마우스를 움직이면 onmousemove 리스너에서 마우스 포인터의 좌표를 div태그에다 출력해라. 

(innerHTML 사용)

<body>
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\둘리1.jpg"
     alt="" onmousemove="on(event)" width="200" height="150">
     <div id="div"></div>
    <script>
        function on(a){
            var div=document.getElementById("div");
            div.innerHTML=a.clientX+" "+a.clientY;
        }
    </script>
</body>

--------

4. 스크린 해상도가 1200*1024보다 작은 경우 “경고!” 라고 경고 창을 출력해라.

(screen객체에 있는 width, height 사용)

    <script>
        window.onload=function(){
            if(window.screen.width<1200|| window.screen.height<1024){
                alert("경고");
            }
            
        }
    </script>

-----------

** 제이쿼리 문서 객체 내부 검사

문서객체 내부 글자와 관련된 기능 수행
1. html() // 태그로 인식하여 공통적인 게 있으면 첫번째만 
2. text() : 선택한 모든 문서 객체 글자를 이어서 출력// 텍스트는 모두 인식


// text 이용시: 자바스크립트제이쿼리 팝업
// html 이용시 자바만 팝업

<body>
    <h1>자바</h1>
    <h1>스크립트</h1>
    <h1>제이쿼리</h1>
    <script>
        $(function(){
            var n=$('h1').text();
            alert(n);
        })
    </script>
</body>

------

** html() 이용하여 문자열 추가(함수 넣을 수도 있음)

<body>
    <div></div>
    <div></div>
    <div></div>
    <script>
       $(function(){
           $('div').html('hi');
       }) 
    </script>
</body>

------

** 문자열 삭제
// 자바, 스크립트 중 스크립트만 출력

<body>
    <h1>자바</h1>
    <h1>스크립트</h1>
    <script>
       $(function(){
           $('h1').first().remove();
       });
    </script>
</body>


*** 모든 내용 지울때(empty())

<body>
    <h1>자바</h1>
    <h1>스크립트</h1>
    <script>
       $(function(){
           $('h1').empty();
       });
    </script>
</body>

---------

** 문서객체 생성
    <script>
       $(function(){
         $('<h1></h1>');
         // $() 괄호 안 매개변수에 html 태그를
         //문자열로 넣기만 하면 문서객체 생성됨
       });
    </script>


=> 문자열 넣고 바디에 추가(appendTo)

    <script>
       $(function(){
         $('<h1></h1>').html('hi').appendTo('body');
         
         // $() 괄호 안 매개변수에 html 태그를
         //문자열로 넣기만 하면 문서객체 생성됨
       });
    </script>

----

// img src=""  그림 삽입

       $(function(){
         $('<img />',{
             src:"C:/Users/USER/OneDrive/바탕 화면/공부/혼자연습/cgv/둘리1.jpg",
             width: 200,
             height: 150
         }).appendTo('body');

       });

=> attr 로 속성추가시
$(function(){
    $('<img>').appendTo('body').attr('src','C:Desktop/고양이.jpg');
    $('img').attr('width',500);
    $('img').attr('height',500);


});

-------

** 태그생성 추가 바디에 바로 연결하는 방법 
    <script>
       $(function(){
         var n='<h1>head1</h1>';
         var m='<h2>head2</h2>';
         $('body').append(n,m);
       });
    </script>

--------

div 생성해서 객체 배열 추가

<script>
            $(function(){
                var n=[{name:'kim',id:'123'},
                        {name:'lee',id:'124'},
                        {name:'park',id:'163'},
                ];
                //문서 객체 추가
                $('div').append(function(index){
                    var a=n[index];
                    var b='';

                    b+=a.id + " " + a.name;
                    return b;
                });

            });
        </script>


--------

** 문서객체 이동

<body>
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\둘리1.jpg"
     alt="" width="200" height="150">
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\알라딘포스터1.jpg"
     alt="" width="200" height="150">
    <script>
       $(document).ready(function(){
        $('img').first().appendTo('body');
        // 문서 객체 이동(첫번째 이미지를 바디에 붙임-뒤로이동)

       });
    </script>
</body>

-------

// 3초 마다 첫번째 이미지를 마지막 위치로 보내라

<body>
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\둘리1.jpg"
     alt="" width="200" height="150">
    <img src="C:\Users\USER\OneDrive\바탕 화면\공부\혼자연습\cgv\알라딘포스터1.jpg"
     alt="" width="200" height="150">
    <script>
       $(document).ready(function(){
        setInterval(function(){
            $('img').first().appendTo('body');
        },3000);
       });
    </script>
</body>

-------------

// div 태그에 h1 추가해서 출력

<body>
    <h1>효준</h1>
    <div></div>
    <script>
       $(function(){
           $('div').appendTo('h1');
       })
    </script>
</body>


--------------------

** append 는 객체
** appendto는 태그

$(A).appendTo(B) : A를 B뒷부분에 추가한다.

$(A).append(B) : B를 A의 뒷부분에 추가한다.


--------------

** 문서복제
$(selector).clone()

<body>
    <h1>효준</h1>
    <div></div>
    <script>
       $(function(){
           $('h1').append($('div').clone());
       })
    </script>
</body>

------------

// h1 첫번재 글자는 파랑, 두번째는 바이올렛으로 글자 변경

$(function(){

$('h1').eq(0).css('background','blue');
$('h1').eq(1).css('background','violet');

});


=>
내가 짠거

<body>
    <h1>효준</h1>
    <h1>길동</h1>
    <div></div>
    <script>
       $(function(){
           $('h1').first().css('color','blue');
           $('h1').last().css('color','violet');
       })
    </script>
</body>

=>

<script>
      $(document).ready(function(){
        $('h1').filter(':even').css({
                
                color:'blue'
            });
        $('h1').filter(':odd').css({
                
                color:'violet'
            })
      })
    </script>

---------

** 제이쿼리 이벤트처리

- 이벤트 연결 메소드
on()
1. $(selector).on(eventName, function(event){ });
2. $(selector).on(object);


- 이벤트 연결 제거
off()
1. $(selector).off( ); // 이벤트 모두 제거
2. $(selector).off(eventName); // 이벤트네임에 해당하는 것만 제거
3. $(selector).off(eventName, function(event){ }); // 특정 이벤트 리스너 제거


---------

** on() 연습


<body>
    <h1>one</h1>
    <h1>two</h1>
    <h1>three</h1>
    <script>
       $(document).ready(function(){
        $('h1').on('click',function(){
            $(this).html(function(index,html){
                return html+'★';
            });
        })
       });
    </script>
</body>

-------

** on() 연습

마우스오버시 클래스 추가,  마우스 아웃시 제거
<body>
    <h1>one</h1>
    <h1>two</h1>
    <h1>three</h1>
    <script>
       $(document).ready(function(){
        $('h1').on({
            mouseover:function(){
                $(this).addClass('aa');
            },
            mouseout:function(){
                $(this).removeClass('aa');
            }
        })
       });
    </script>
</body>

---------

// h1 태그 클릭시 문자열로 "클릭"이라고 추력하면서 "이벤트 발생!" 이라고 경고창도 출력

<body>
    <h1>one</h1>
    <h1>two</h1>
    <h1>three</h1>
    <script>
       $(document).ready(function(){
        $('h1').click(function(){
            $(this).html("클릭");
            alert("이벤트 발생!");
        })
       });
    </script>
</body>

---------

// context 객체(매개변수 두개)
// 

<body>
    <div>
        <h1>one</h1>
        <p>일</p>
    </div>
    <div>
        <h1>two</h1>
        <p>이</p>
    </div>
    <div>
        <h1>three</h1>
        <p>삼</p>
    </div>

    <script>
        $(function(){
            $('div').click(function(){
                var a=$('h1',this).text();
                var b=$('p',this).text();
                alert(a+" "+b);
                // context 객체
            })
        });
       
    </script>
</body>

--------

** 이벤트 강제 발생

trigger
1. $(selector).trigger(eventName, data);
2. $(selector).trigger(eventName);


----

** preventDefault() : 기본 이벤트 제거


// a태그 클릭시 링크 이동해야 되는데 기본 속성 제거 되어 이동 안됨

<body>
    <h1>
        <a href="http://www.naver.com"
        target="_blank">네이버</a>
    </h1>
    <script>
        $(function(){
            $('a').click(function(e){
                $(this).css('background','yellow');
                e.preventDefault();
            });
        });
    </script>
</body>


---

** stopPropagation() : 이벤트 전달 제거

<body>
    <h1>
        <a href="http://www.naver.com"
        target="_blank">네이버</a>
    </h1>
    <script>
        $(function(){
            $('a').click(function(e){
                $(this).css('background','yellow');
                e.stopPropagation();
                e.preventDefault();
            });
        });
    </script>
</body>

---

// 2초마다 함수를 실행하고 싶다
클릭하지 않아도 강제로 클릭 이벤트 실행
trigger 연습

<body>
    <h1>jquery</h1>
    <h1>jsp</h1>
    <script>
        $(function(){
            $('h1').click(function(){
                $(this).html(function(index,n){
                    return n+"*";
// n은 데이터값
                });

                setInterval(function(){
                    $('h1').last().trigger('click');
                },2000);
            });
        });
    </script>
</body>

-----

// 제이쿼리 문자에 클릭 이벤트 강제 발생

<body>
    <h1>jquery</h1>
    <h1>jsp</h1>
    <script>
        $(function(){
            $('h1').click(function(event, n1, n2){
                alert(n1+" : "+n2);                
            });

            $('h1').first().trigger('click',[3,4]);
            // n1,2의 값을 3,4 로
        });
    </script>
</body>

-------

** 클릭할때 div 영역에 head 덧붙이기

<body>
    <div id="aa">
        <h1>head</h1>
    </div>
    <script>
        $(function(){
           $('h1').on('click',function(){
            var n=$(this).html();
            $('#aa').append(n);
           });
        });
    </script>
</body>

=> 이렇게도 가능

<body>
    <div id="aa">
        <h1>head</h1>
    </div>
    <script>
        $(function(){
          $('#aa').on('click','h1',function(){
          // h1에 해당하는 값만 클릭시 이벤트 발생(이벤트 범위설정)
            var n=$(this).html();
            $('#aa').append(n);
          });
        });
    </script>
</body>

------

** 키보드이벤트
keydown: 누를때
up: 뗄때
press: 입력할때
--------

** keyup 연습
// 텍스트에어리어에 입력하면 입력한 글자수 길이를 h2에 띄우기

<body>
    <div>
        <p>안녕하세요</p>
        <h2>여러분</h2>
        <textarea cols="50" rows="5"></textarea>
    </div>
    <script>
        $(function(e){
          $('textarea').keyup(function(){
              var n=$(this).val().length;
              var m=n;
              $('h2').html(m);
            // 길이가 10 이하면 글자색 pink
            //반대면 blue
              if(n<=10){
                $('h2').css('color','pink');
              }else{
                $('h2').css('color','blue');
              }
          })
        });
    </script>
</body>


-------


이름: 입력창
비번: 입력창
제출버튼(submit)

제출 누르면 이름,비번 팝업 뜨게

// input 이랑 전체 묶을 땐 form으로 묶어야 됨
// submit 제출 함수이용

<body>
    <form id="pro">
    <table>
        <tr>
            <td>이름 : </td>
            <td><input type="text" id="name"></td>
        </tr>
        <tr>
            <td>비번 : </td>
            <td><input type="password" id="pw"></td>
        </tr>
    </table>
        <input type="submit" id="" value="제출">
    </form>
    <script>
        $(function(e){
          $('#pro').submit(function(e){
            var n=$('#name').val();
            var m=$('#pw').val();
            alert(n+" "+m);
            e.preventDefault(); //넣으면 제출 안됨
          });
        });
    </script>
</body>

------

